Terminals unused in grammar

   TWOQ
   ONEQ
   NESTED_STR
   UMINUS


State 0 conflicts: 13 shift/reduce
State 2 conflicts: 13 shift/reduce
State 5 conflicts: 13 shift/reduce
State 16 conflicts: 14 shift/reduce, 5 reduce/reduce
State 28 conflicts: 1 reduce/reduce
State 46 conflicts: 1 reduce/reduce
State 48 conflicts: 1 reduce/reduce
State 73 conflicts: 13 shift/reduce
State 87 conflicts: 2 shift/reduce
State 88 conflicts: 2 shift/reduce
State 97 conflicts: 13 shift/reduce
State 110 conflicts: 13 shift/reduce
State 123 conflicts: 13 shift/reduce
State 134 conflicts: 13 shift/reduce
State 137 conflicts: 1 reduce/reduce
State 145 conflicts: 2 shift/reduce
State 146 conflicts: 2 shift/reduce
State 147 conflicts: 2 shift/reduce
State 148 conflicts: 2 shift/reduce
State 161 conflicts: 13 shift/reduce
State 169 conflicts: 13 shift/reduce
State 175 conflicts: 13 shift/reduce
State 176 conflicts: 13 shift/reduce
State 180 conflicts: 13 shift/reduce


Grammar

    0 $accept: main $end

    1 main: block

    2 block: stat_list
    3      | stat_list ret

    4 stat_list: stat_list opt_stat
    5          | opt_stat

    6 opt_stat: stat
    7         | /* empty */

    8 stat: ';'
    9     | var_list '=' exp_list
   10     | function_call
   11     | label
   12     | BREAK
   13     | GOTO NAME
   14     | while_do
   15     | statement
   16     | for_cycle
   17     | FUNCTION function_name function_body
   18     | locals

   19 while_do: DO block END
   20         | WHILE exp DO block END
   21         | REPEAT block UNTIL exp

   22 locals: LOCAL FUNCTION NAME function_body
   23       | LOCAL attr_list
   24       | LOCAL attr_list '=' exp_list

   25 for_cycle: FOR NAME '=' exp_list DO block END
   26          | FOR exp_list IN exp_list DO block END

   27 statement: if_start END
   28          | if_start else_if END
   29          | if_start ELSE block END
   30          | if_start else_if ELSE block END

   31 if_start: IF exp THEN block

   32 else_if: else_if ELSEIF exp THEN block
   33        | ELSEIF exp THEN block

   34 attr_list: attr_list ',' NAME attr
   35          | NAME attr

   36 attr: '<' NAME '>'
   37     | /* empty */

   38 ret: RETURN
   39    | RETURN ';'
   40    | RETURN exp_list
   41    | RETURN exp_list ';'

   42 label: LABEL_DEF NAME LABEL_DEF

   43 function_name: function_name_part
   44              | function_name_part ':' NAME

   45 function_name_part: function_name_part '.' NAME
   46                   | NAME

   47 var_list: var_list ',' var
   48         | var

   49 var: NAME
   50    | prefix_exp '[' exp ']'
   51    | prefix_exp '.' NAME

   52 prefix_exp: var
   53           | function_call
   54           | '(' exp ')'

   55 function_def: FUNCTION function_body

   56 function_body: '(' ')' block END
   57              | '(' par_list ')' block END

   58 function_call: prefix_exp args
   59              | prefix_exp ':' NAME args

   60 args: '(' ')'
   61     | '(' exp_list ')'
   62     | table_body
   63     | literalString

   64 par_list: name_list
   65         | name_list ',' DOTS
   66         | DOTS

   67 exp_list: exp_list ',' exp
   68         | exp

   69 name_list: name_list ',' NAME
   70          | NAME

   71 table_body: '{' '}'
   72           | '{' field_list '}'

   73 field_list: field_list_part field_sep
   74           | field_list_part

   75 field_list_part: field_list_part field_sep field
   76                | field

   77 field: '[' exp ']' '=' exp
   78      | NAME '=' exp
   79      | exp

   80 field_sep: ','
   81          | ';'

   82 exp: NIL
   83    | FALSE
   84    | TRUE
   85    | DOTS
   86    | '(' exp ')'
   87    | exp BINOP exp
   88    | exp MINUS exp
   89    | exp '<' exp
   90    | exp '>' exp
   91    | MINUS exp
   92    | UNOP exp
   93    | numeral
   94    | literalString
   95    | table_body
   96    | function_def
   97    | function_call
   98    | var

   99 literalString: ONEQSTRING
  100              | TWOQSTRING
  101              | LONGSTRING

  102 numeral: INT
  103        | HEX
  104        | FLOAT
  105        | HEX_FLOAT


Terminals, with rules where they appear

$end (0) 0
'(' (40) 54 56 57 60 61 86
')' (41) 54 56 57 60 61 86
',' (44) 34 47 65 67 69 80
'.' (46) 45 51
':' (58) 44 59
';' (59) 8 39 41 81
'<' (60) 36 89
'=' (61) 9 24 25 77 78
'>' (62) 36 90
'[' (91) 50 77
']' (93) 50 77
'{' (123) 71 72
'}' (125) 71 72
error (256)
INT (258) 102
HEX (259) 103
FLOAT (260) 104
HEX_FLOAT (261) 105
TWOQ (262)
ONEQ (263)
ONEQSTRING (264) 99
TWOQSTRING (265) 100
LONGSTRING (266) 101
NESTED_STR (267)
NAME (268) 13 22 25 34 35 36 42 44 45 46 49 51 59 69 70 78
DOTS (269) 65 66 85
NIL (270) 82
FALSE (271) 83
TRUE (272) 84
DO (273) 19 20 25 26
WHILE (274) 20
FOR (275) 25 26
UNTIL (276) 21
REPEAT (277) 21
END (278) 19 20 25 26 27 28 29 30 56 57
GOTO (279) 13
IN (280) 26
FUNCTION (281) 17 22 55
BREAK (282) 12
RETURN (283) 38 39 40 41
LABEL_DEF (284) 42
IF (285) 31
THEN (286) 31 32 33
ELSEIF (287) 32 33
ELSE (288) 29 30
LOCAL (289) 22 23 24
MINUS (290) 88 91
UNOP (291) 92
BINOP (292) 87
UMINUS (293)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
main (53)
    on left: 1, on right: 0
block (54)
    on left: 2 3, on right: 1 19 20 21 25 26 29 30 31 32 33 56 57
stat_list (55)
    on left: 4 5, on right: 2 3 4
opt_stat (56)
    on left: 6 7, on right: 4 5
stat (57)
    on left: 8 9 10 11 12 13 14 15 16 17 18, on right: 6
while_do (58)
    on left: 19 20 21, on right: 14
locals (59)
    on left: 22 23 24, on right: 18
for_cycle (60)
    on left: 25 26, on right: 16
statement (61)
    on left: 27 28 29 30, on right: 15
if_start (62)
    on left: 31, on right: 27 28 29 30
else_if (63)
    on left: 32 33, on right: 28 30 32
attr_list (64)
    on left: 34 35, on right: 23 24 34
attr (65)
    on left: 36 37, on right: 34 35
ret (66)
    on left: 38 39 40 41, on right: 3
label (67)
    on left: 42, on right: 11
function_name (68)
    on left: 43 44, on right: 17
function_name_part (69)
    on left: 45 46, on right: 43 44 45
var_list (70)
    on left: 47 48, on right: 9 47
var (71)
    on left: 49 50 51, on right: 47 48 52 98
prefix_exp (72)
    on left: 52 53 54, on right: 50 51 58 59
function_def (73)
    on left: 55, on right: 96
function_body (74)
    on left: 56 57, on right: 17 22 55
function_call (75)
    on left: 58 59, on right: 10 53 97
args (76)
    on left: 60 61 62 63, on right: 58 59
par_list (77)
    on left: 64 65 66, on right: 57
exp_list (78)
    on left: 67 68, on right: 9 24 25 26 40 41 61 67
name_list (79)
    on left: 69 70, on right: 64 65 69
table_body (80)
    on left: 71 72, on right: 62 95
field_list (81)
    on left: 73 74, on right: 72
field_list_part (82)
    on left: 75 76, on right: 73 74 75
field (83)
    on left: 77 78 79, on right: 75 76
field_sep (84)
    on left: 80 81, on right: 73 75
exp (85)
    on left: 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98, on right:
    20 21 31 32 33 50 54 67 68 77 78 79 86 87 88 89 90 91 92
literalString (86)
    on left: 99 100 101, on right: 63 94
numeral (87)
    on left: 102 103 104 105, on right: 93


State 0

    0 $accept: . main $end

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    main           go to state 14
    block          go to state 15
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 1

   49 var: NAME .

    $default  reduce using rule 49 (var)


State 2

   19 while_do: DO . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 29
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 3

   20 while_do: WHILE . exp DO block END

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 50
    literalString  go to state 51
    numeral        go to state 52


State 4

   25 for_cycle: FOR . NAME '=' exp_list DO block END
   26          | FOR . exp_list IN exp_list DO block END

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 53
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    exp_list       go to state 54
    table_body     go to state 49
    exp            go to state 55
    literalString  go to state 51
    numeral        go to state 52


State 5

   21 while_do: REPEAT . block UNTIL exp

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 56
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 6

   13 stat: GOTO . NAME

    NAME  shift, and go to state 57


State 7

   17 stat: FUNCTION . function_name function_body

    NAME  shift, and go to state 58

    function_name       go to state 59
    function_name_part  go to state 60


State 8

   12 stat: BREAK .

    $default  reduce using rule 12 (stat)


State 9

   42 label: LABEL_DEF . NAME LABEL_DEF

    NAME  shift, and go to state 61


State 10

   31 if_start: IF . exp THEN block

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 62
    literalString  go to state 51
    numeral        go to state 52


State 11

   22 locals: LOCAL . FUNCTION NAME function_body
   23       | LOCAL . attr_list
   24       | LOCAL . attr_list '=' exp_list

    NAME      shift, and go to state 63
    FUNCTION  shift, and go to state 64

    attr_list  go to state 65


State 12

    8 stat: ';' .

    $default  reduce using rule 8 (stat)


State 13

   54 prefix_exp: '(' . exp ')'

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 66
    literalString  go to state 51
    numeral        go to state 52


State 14

    0 $accept: main . $end

    $end  shift, and go to state 67


State 15

    1 main: block .

    $default  reduce using rule 1 (main)


State 16

    2 block: stat_list .
    3      | stat_list . ret
    4 stat_list: stat_list . opt_stat

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    RETURN     shift, and go to state 68
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    $end       reduce using rule 2 (block)
    $end       [reduce using rule 7 (opt_stat)]
    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    UNTIL      reduce using rule 2 (block)
    UNTIL      [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    END        reduce using rule 2 (block)
    END        [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    RETURN     [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    ELSEIF     reduce using rule 2 (block)
    ELSEIF     [reduce using rule 7 (opt_stat)]
    ELSE       reduce using rule 2 (block)
    ELSE       [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 2 (block)

    opt_stat       go to state 69
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    ret            go to state 70
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 17

    5 stat_list: opt_stat .

    $default  reduce using rule 5 (stat_list)


State 18

    6 opt_stat: stat .

    $default  reduce using rule 6 (opt_stat)


State 19

   14 stat: while_do .

    $default  reduce using rule 14 (stat)


State 20

   18 stat: locals .

    $default  reduce using rule 18 (stat)


State 21

   16 stat: for_cycle .

    $default  reduce using rule 16 (stat)


State 22

   15 stat: statement .

    $default  reduce using rule 15 (stat)


State 23

   27 statement: if_start . END
   28          | if_start . else_if END
   29          | if_start . ELSE block END
   30          | if_start . else_if ELSE block END

    END     shift, and go to state 71
    ELSEIF  shift, and go to state 72
    ELSE    shift, and go to state 73

    else_if  go to state 74


State 24

   11 stat: label .

    $default  reduce using rule 11 (stat)


State 25

    9 stat: var_list . '=' exp_list
   47 var_list: var_list . ',' var

    '='  shift, and go to state 75
    ','  shift, and go to state 76


State 26

   48 var_list: var .
   52 prefix_exp: var .

    '='       reduce using rule 48 (var_list)
    ','       reduce using rule 48 (var_list)
    $default  reduce using rule 52 (prefix_exp)


State 27

   50 var: prefix_exp . '[' exp ']'
   51    | prefix_exp . '.' NAME
   58 function_call: prefix_exp . args
   59              | prefix_exp . ':' NAME args

    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    ':'         shift, and go to state 77
    '.'         shift, and go to state 78
    '['         shift, and go to state 79
    '('         shift, and go to state 80
    '{'         shift, and go to state 45

    args           go to state 81
    table_body     go to state 82
    literalString  go to state 83


State 28

   10 stat: function_call .
   53 prefix_exp: function_call .

    ONEQSTRING  reduce using rule 53 (prefix_exp)
    TWOQSTRING  reduce using rule 53 (prefix_exp)
    LONGSTRING  reduce using rule 53 (prefix_exp)
    ':'         reduce using rule 53 (prefix_exp)
    '.'         reduce using rule 53 (prefix_exp)
    '['         reduce using rule 53 (prefix_exp)
    '('         reduce using rule 10 (stat)
    '('         [reduce using rule 53 (prefix_exp)]
    '{'         reduce using rule 53 (prefix_exp)
    $default    reduce using rule 10 (stat)


State 29

   19 while_do: DO block . END

    END  shift, and go to state 84


State 30

  102 numeral: INT .

    $default  reduce using rule 102 (numeral)


State 31

  103 numeral: HEX .

    $default  reduce using rule 103 (numeral)


State 32

  104 numeral: FLOAT .

    $default  reduce using rule 104 (numeral)


State 33

  105 numeral: HEX_FLOAT .

    $default  reduce using rule 105 (numeral)


State 34

   99 literalString: ONEQSTRING .

    $default  reduce using rule 99 (literalString)


State 35

  100 literalString: TWOQSTRING .

    $default  reduce using rule 100 (literalString)


State 36

  101 literalString: LONGSTRING .

    $default  reduce using rule 101 (literalString)


State 37

   85 exp: DOTS .

    $default  reduce using rule 85 (exp)


State 38

   82 exp: NIL .

    $default  reduce using rule 82 (exp)


State 39

   83 exp: FALSE .

    $default  reduce using rule 83 (exp)


State 40

   84 exp: TRUE .

    $default  reduce using rule 84 (exp)


State 41

   55 function_def: FUNCTION . function_body

    '('  shift, and go to state 85

    function_body  go to state 86


State 42

   91 exp: MINUS . exp

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 87
    literalString  go to state 51
    numeral        go to state 52


State 43

   92 exp: UNOP . exp

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 88
    literalString  go to state 51
    numeral        go to state 52


State 44

   54 prefix_exp: '(' . exp ')'
   86 exp: '(' . exp ')'

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 89
    literalString  go to state 51
    numeral        go to state 52


State 45

   71 table_body: '{' . '}'
   72           | '{' . field_list '}'

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 90
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '['         shift, and go to state 91
    '('         shift, and go to state 44
    '{'         shift, and go to state 45
    '}'         shift, and go to state 92

    var              go to state 46
    prefix_exp       go to state 27
    function_def     go to state 47
    function_call    go to state 48
    table_body       go to state 49
    field_list       go to state 93
    field_list_part  go to state 94
    field            go to state 95
    exp              go to state 96
    literalString    go to state 51
    numeral          go to state 52


State 46

   52 prefix_exp: var .
   98 exp: var .

    ONEQSTRING  reduce using rule 52 (prefix_exp)
    TWOQSTRING  reduce using rule 52 (prefix_exp)
    LONGSTRING  reduce using rule 52 (prefix_exp)
    ':'         reduce using rule 52 (prefix_exp)
    '.'         reduce using rule 52 (prefix_exp)
    '['         reduce using rule 52 (prefix_exp)
    '('         reduce using rule 52 (prefix_exp)
    '('         [reduce using rule 98 (exp)]
    '{'         reduce using rule 52 (prefix_exp)
    $default    reduce using rule 98 (exp)


State 47

   96 exp: function_def .

    $default  reduce using rule 96 (exp)


State 48

   53 prefix_exp: function_call .
   97 exp: function_call .

    ONEQSTRING  reduce using rule 53 (prefix_exp)
    TWOQSTRING  reduce using rule 53 (prefix_exp)
    LONGSTRING  reduce using rule 53 (prefix_exp)
    ':'         reduce using rule 53 (prefix_exp)
    '.'         reduce using rule 53 (prefix_exp)
    '['         reduce using rule 53 (prefix_exp)
    '('         reduce using rule 53 (prefix_exp)
    '('         [reduce using rule 97 (exp)]
    '{'         reduce using rule 53 (prefix_exp)
    $default    reduce using rule 97 (exp)


State 49

   95 exp: table_body .

    $default  reduce using rule 95 (exp)


State 50

   20 while_do: WHILE exp . DO block END
   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    DO     shift, and go to state 97
    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101


State 51

   94 exp: literalString .

    $default  reduce using rule 94 (exp)


State 52

   93 exp: numeral .

    $default  reduce using rule 93 (exp)


State 53

   25 for_cycle: FOR NAME . '=' exp_list DO block END
   49 var: NAME .

    '='  shift, and go to state 102

    $default  reduce using rule 49 (var)


State 54

   26 for_cycle: FOR exp_list . IN exp_list DO block END
   67 exp_list: exp_list . ',' exp

    IN   shift, and go to state 103
    ','  shift, and go to state 104


State 55

   68 exp_list: exp .
   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 68 (exp_list)


State 56

   21 while_do: REPEAT block . UNTIL exp

    UNTIL  shift, and go to state 105


State 57

   13 stat: GOTO NAME .

    $default  reduce using rule 13 (stat)


State 58

   46 function_name_part: NAME .

    $default  reduce using rule 46 (function_name_part)


State 59

   17 stat: FUNCTION function_name . function_body

    '('  shift, and go to state 85

    function_body  go to state 106


State 60

   43 function_name: function_name_part .
   44              | function_name_part . ':' NAME
   45 function_name_part: function_name_part . '.' NAME

    ':'  shift, and go to state 107
    '.'  shift, and go to state 108

    $default  reduce using rule 43 (function_name)


State 61

   42 label: LABEL_DEF NAME . LABEL_DEF

    LABEL_DEF  shift, and go to state 109


State 62

   31 if_start: IF exp . THEN block
   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    THEN   shift, and go to state 110
    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101


State 63

   35 attr_list: NAME . attr

    '<'  shift, and go to state 111

    $default  reduce using rule 37 (attr)

    attr  go to state 112


State 64

   22 locals: LOCAL FUNCTION . NAME function_body

    NAME  shift, and go to state 113


State 65

   23 locals: LOCAL attr_list .
   24       | LOCAL attr_list . '=' exp_list
   34 attr_list: attr_list . ',' NAME attr

    '='  shift, and go to state 114
    ','  shift, and go to state 115

    $default  reduce using rule 23 (locals)


State 66

   54 prefix_exp: '(' exp . ')'
   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    ')'    shift, and go to state 116


State 67

    0 $accept: main $end .

    $default  accept


State 68

   38 ret: RETURN .
   39    | RETURN . ';'
   40    | RETURN . exp_list
   41    | RETURN . exp_list ';'

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    ';'         shift, and go to state 117
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    $default  reduce using rule 38 (ret)

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    exp_list       go to state 118
    table_body     go to state 49
    exp            go to state 55
    literalString  go to state 51
    numeral        go to state 52


State 69

    4 stat_list: stat_list opt_stat .

    $default  reduce using rule 4 (stat_list)


State 70

    3 block: stat_list ret .

    $default  reduce using rule 3 (block)


State 71

   27 statement: if_start END .

    $default  reduce using rule 27 (statement)


State 72

   33 else_if: ELSEIF . exp THEN block

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 119
    literalString  go to state 51
    numeral        go to state 52


State 73

   29 statement: if_start ELSE . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 120
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 74

   28 statement: if_start else_if . END
   30          | if_start else_if . ELSE block END
   32 else_if: else_if . ELSEIF exp THEN block

    END     shift, and go to state 121
    ELSEIF  shift, and go to state 122
    ELSE    shift, and go to state 123


State 75

    9 stat: var_list '=' . exp_list

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    exp_list       go to state 124
    table_body     go to state 49
    exp            go to state 55
    literalString  go to state 51
    numeral        go to state 52


State 76

   47 var_list: var_list ',' . var

    NAME  shift, and go to state 1
    '('   shift, and go to state 13

    var            go to state 125
    prefix_exp     go to state 27
    function_call  go to state 126


State 77

   59 function_call: prefix_exp ':' . NAME args

    NAME  shift, and go to state 127


State 78

   51 var: prefix_exp '.' . NAME

    NAME  shift, and go to state 128


State 79

   50 var: prefix_exp '[' . exp ']'

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 129
    literalString  go to state 51
    numeral        go to state 52


State 80

   60 args: '(' . ')'
   61     | '(' . exp_list ')'

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    ')'         shift, and go to state 130
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    exp_list       go to state 131
    table_body     go to state 49
    exp            go to state 55
    literalString  go to state 51
    numeral        go to state 52


State 81

   58 function_call: prefix_exp args .

    $default  reduce using rule 58 (function_call)


State 82

   62 args: table_body .

    $default  reduce using rule 62 (args)


State 83

   63 args: literalString .

    $default  reduce using rule 63 (args)


State 84

   19 while_do: DO block END .

    $default  reduce using rule 19 (while_do)


State 85

   56 function_body: '(' . ')' block END
   57              | '(' . par_list ')' block END

    NAME  shift, and go to state 132
    DOTS  shift, and go to state 133
    ')'   shift, and go to state 134

    par_list   go to state 135
    name_list  go to state 136


State 86

   55 function_def: FUNCTION function_body .

    $default  reduce using rule 55 (function_def)


State 87

   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp
   91    | MINUS exp .

    '<'  shift, and go to state 100
    '>'  shift, and go to state 101

    '<'       [reduce using rule 91 (exp)]
    '>'       [reduce using rule 91 (exp)]
    $default  reduce using rule 91 (exp)


State 88

   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp
   92    | UNOP exp .

    '<'  shift, and go to state 100
    '>'  shift, and go to state 101

    '<'       [reduce using rule 92 (exp)]
    '>'       [reduce using rule 92 (exp)]
    $default  reduce using rule 92 (exp)


State 89

   54 prefix_exp: '(' exp . ')'
   86 exp: '(' exp . ')'
   87    | exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    ')'    shift, and go to state 137


State 90

   49 var: NAME .
   78 field: NAME . '=' exp

    '='  shift, and go to state 138

    $default  reduce using rule 49 (var)


State 91

   77 field: '[' . exp ']' '=' exp

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 139
    literalString  go to state 51
    numeral        go to state 52


State 92

   71 table_body: '{' '}' .

    $default  reduce using rule 71 (table_body)


State 93

   72 table_body: '{' field_list . '}'

    '}'  shift, and go to state 140


State 94

   73 field_list: field_list_part . field_sep
   74           | field_list_part .
   75 field_list_part: field_list_part . field_sep field

    ';'  shift, and go to state 141
    ','  shift, and go to state 142

    $default  reduce using rule 74 (field_list)

    field_sep  go to state 143


State 95

   76 field_list_part: field .

    $default  reduce using rule 76 (field_list_part)


State 96

   79 field: exp .
   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 79 (field)


State 97

   20 while_do: WHILE exp DO . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 144
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 98

   88 exp: exp MINUS . exp

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 145
    literalString  go to state 51
    numeral        go to state 52


State 99

   87 exp: exp BINOP . exp

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 146
    literalString  go to state 51
    numeral        go to state 52


State 100

   89 exp: exp '<' . exp

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 147
    literalString  go to state 51
    numeral        go to state 52


State 101

   90 exp: exp '>' . exp

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 148
    literalString  go to state 51
    numeral        go to state 52


State 102

   25 for_cycle: FOR NAME '=' . exp_list DO block END

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    exp_list       go to state 149
    table_body     go to state 49
    exp            go to state 55
    literalString  go to state 51
    numeral        go to state 52


State 103

   26 for_cycle: FOR exp_list IN . exp_list DO block END

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    exp_list       go to state 150
    table_body     go to state 49
    exp            go to state 55
    literalString  go to state 51
    numeral        go to state 52


State 104

   67 exp_list: exp_list ',' . exp

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 151
    literalString  go to state 51
    numeral        go to state 52


State 105

   21 while_do: REPEAT block UNTIL . exp

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 152
    literalString  go to state 51
    numeral        go to state 52


State 106

   17 stat: FUNCTION function_name function_body .

    $default  reduce using rule 17 (stat)


State 107

   44 function_name: function_name_part ':' . NAME

    NAME  shift, and go to state 153


State 108

   45 function_name_part: function_name_part '.' . NAME

    NAME  shift, and go to state 154


State 109

   42 label: LABEL_DEF NAME LABEL_DEF .

    $default  reduce using rule 42 (label)


State 110

   31 if_start: IF exp THEN . block

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 155
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 111

   36 attr: '<' . NAME '>'

    NAME  shift, and go to state 156


State 112

   35 attr_list: NAME attr .

    $default  reduce using rule 35 (attr_list)


State 113

   22 locals: LOCAL FUNCTION NAME . function_body

    '('  shift, and go to state 85

    function_body  go to state 157


State 114

   24 locals: LOCAL attr_list '=' . exp_list

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    exp_list       go to state 158
    table_body     go to state 49
    exp            go to state 55
    literalString  go to state 51
    numeral        go to state 52


State 115

   34 attr_list: attr_list ',' . NAME attr

    NAME  shift, and go to state 159


State 116

   54 prefix_exp: '(' exp ')' .

    $default  reduce using rule 54 (prefix_exp)


State 117

   39 ret: RETURN ';' .

    $default  reduce using rule 39 (ret)


State 118

   40 ret: RETURN exp_list .
   41    | RETURN exp_list . ';'
   67 exp_list: exp_list . ',' exp

    ';'  shift, and go to state 160
    ','  shift, and go to state 104

    $default  reduce using rule 40 (ret)


State 119

   33 else_if: ELSEIF exp . THEN block
   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    THEN   shift, and go to state 161
    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101


State 120

   29 statement: if_start ELSE block . END

    END  shift, and go to state 162


State 121

   28 statement: if_start else_if END .

    $default  reduce using rule 28 (statement)


State 122

   32 else_if: else_if ELSEIF . exp THEN block

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 163
    literalString  go to state 51
    numeral        go to state 52


State 123

   30 statement: if_start else_if ELSE . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 164
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 124

    9 stat: var_list '=' exp_list .
   67 exp_list: exp_list . ',' exp

    ','  shift, and go to state 104

    $default  reduce using rule 9 (stat)


State 125

   47 var_list: var_list ',' var .
   52 prefix_exp: var .

    '='       reduce using rule 47 (var_list)
    ','       reduce using rule 47 (var_list)
    $default  reduce using rule 52 (prefix_exp)


State 126

   53 prefix_exp: function_call .

    $default  reduce using rule 53 (prefix_exp)


State 127

   59 function_call: prefix_exp ':' NAME . args

    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    '('         shift, and go to state 80
    '{'         shift, and go to state 45

    args           go to state 165
    table_body     go to state 82
    literalString  go to state 83


State 128

   51 var: prefix_exp '.' NAME .

    $default  reduce using rule 51 (var)


State 129

   50 var: prefix_exp '[' exp . ']'
   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    ']'    shift, and go to state 166


State 130

   60 args: '(' ')' .

    $default  reduce using rule 60 (args)


State 131

   61 args: '(' exp_list . ')'
   67 exp_list: exp_list . ',' exp

    ','  shift, and go to state 104
    ')'  shift, and go to state 167


State 132

   70 name_list: NAME .

    $default  reduce using rule 70 (name_list)


State 133

   66 par_list: DOTS .

    $default  reduce using rule 66 (par_list)


State 134

   56 function_body: '(' ')' . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 168
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 135

   57 function_body: '(' par_list . ')' block END

    ')'  shift, and go to state 169


State 136

   64 par_list: name_list .
   65         | name_list . ',' DOTS
   69 name_list: name_list . ',' NAME

    ','  shift, and go to state 170

    $default  reduce using rule 64 (par_list)


State 137

   54 prefix_exp: '(' exp ')' .
   86 exp: '(' exp ')' .

    ONEQSTRING  reduce using rule 54 (prefix_exp)
    TWOQSTRING  reduce using rule 54 (prefix_exp)
    LONGSTRING  reduce using rule 54 (prefix_exp)
    ':'         reduce using rule 54 (prefix_exp)
    '.'         reduce using rule 54 (prefix_exp)
    '['         reduce using rule 54 (prefix_exp)
    '('         reduce using rule 54 (prefix_exp)
    '('         [reduce using rule 86 (exp)]
    '{'         reduce using rule 54 (prefix_exp)
    $default    reduce using rule 86 (exp)


State 138

   78 field: NAME '=' . exp

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 171
    literalString  go to state 51
    numeral        go to state 52


State 139

   77 field: '[' exp . ']' '=' exp
   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    ']'    shift, and go to state 172


State 140

   72 table_body: '{' field_list '}' .

    $default  reduce using rule 72 (table_body)


State 141

   81 field_sep: ';' .

    $default  reduce using rule 81 (field_sep)


State 142

   80 field_sep: ',' .

    $default  reduce using rule 80 (field_sep)


State 143

   73 field_list: field_list_part field_sep .
   75 field_list_part: field_list_part field_sep . field

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 90
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '['         shift, and go to state 91
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    $default  reduce using rule 73 (field_list)

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    field          go to state 173
    exp            go to state 96
    literalString  go to state 51
    numeral        go to state 52


State 144

   20 while_do: WHILE exp DO block . END

    END  shift, and go to state 174


State 145

   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   88    | exp MINUS exp .
   89    | exp . '<' exp
   90    | exp . '>' exp

    '<'  shift, and go to state 100
    '>'  shift, and go to state 101

    '<'       [reduce using rule 88 (exp)]
    '>'       [reduce using rule 88 (exp)]
    $default  reduce using rule 88 (exp)


State 146

   87 exp: exp . BINOP exp
   87    | exp BINOP exp .
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    '<'  shift, and go to state 100
    '>'  shift, and go to state 101

    '<'       [reduce using rule 87 (exp)]
    '>'       [reduce using rule 87 (exp)]
    $default  reduce using rule 87 (exp)


State 147

   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   89    | exp '<' exp .
   90    | exp . '>' exp

    '<'  shift, and go to state 100
    '>'  shift, and go to state 101

    '<'       [reduce using rule 89 (exp)]
    '>'       [reduce using rule 89 (exp)]
    $default  reduce using rule 89 (exp)


State 148

   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp
   90    | exp '>' exp .

    '<'  shift, and go to state 100
    '>'  shift, and go to state 101

    '<'       [reduce using rule 90 (exp)]
    '>'       [reduce using rule 90 (exp)]
    $default  reduce using rule 90 (exp)


State 149

   25 for_cycle: FOR NAME '=' exp_list . DO block END
   67 exp_list: exp_list . ',' exp

    DO   shift, and go to state 175
    ','  shift, and go to state 104


State 150

   26 for_cycle: FOR exp_list IN exp_list . DO block END
   67 exp_list: exp_list . ',' exp

    DO   shift, and go to state 176
    ','  shift, and go to state 104


State 151

   67 exp_list: exp_list ',' exp .
   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 67 (exp_list)


State 152

   21 while_do: REPEAT block UNTIL exp .
   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 21 (while_do)


State 153

   44 function_name: function_name_part ':' NAME .

    $default  reduce using rule 44 (function_name)


State 154

   45 function_name_part: function_name_part '.' NAME .

    $default  reduce using rule 45 (function_name_part)


State 155

   31 if_start: IF exp THEN block .

    $default  reduce using rule 31 (if_start)


State 156

   36 attr: '<' NAME . '>'

    '>'  shift, and go to state 177


State 157

   22 locals: LOCAL FUNCTION NAME function_body .

    $default  reduce using rule 22 (locals)


State 158

   24 locals: LOCAL attr_list '=' exp_list .
   67 exp_list: exp_list . ',' exp

    ','  shift, and go to state 104

    $default  reduce using rule 24 (locals)


State 159

   34 attr_list: attr_list ',' NAME . attr

    '<'  shift, and go to state 111

    $default  reduce using rule 37 (attr)

    attr  go to state 178


State 160

   41 ret: RETURN exp_list ';' .

    $default  reduce using rule 41 (ret)


State 161

   33 else_if: ELSEIF exp THEN . block

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 179
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 162

   29 statement: if_start ELSE block END .

    $default  reduce using rule 29 (statement)


State 163

   32 else_if: else_if ELSEIF exp . THEN block
   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    THEN   shift, and go to state 180
    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101


State 164

   30 statement: if_start else_if ELSE block . END

    END  shift, and go to state 181


State 165

   59 function_call: prefix_exp ':' NAME args .

    $default  reduce using rule 59 (function_call)


State 166

   50 var: prefix_exp '[' exp ']' .

    $default  reduce using rule 50 (var)


State 167

   61 args: '(' exp_list ')' .

    $default  reduce using rule 61 (args)


State 168

   56 function_body: '(' ')' block . END

    END  shift, and go to state 182


State 169

   57 function_body: '(' par_list ')' . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 183
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 170

   65 par_list: name_list ',' . DOTS
   69 name_list: name_list ',' . NAME

    NAME  shift, and go to state 184
    DOTS  shift, and go to state 185


State 171

   78 field: NAME '=' exp .
   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 78 (field)


State 172

   77 field: '[' exp ']' . '=' exp

    '='  shift, and go to state 186


State 173

   75 field_list_part: field_list_part field_sep field .

    $default  reduce using rule 75 (field_list_part)


State 174

   20 while_do: WHILE exp DO block END .

    $default  reduce using rule 20 (while_do)


State 175

   25 for_cycle: FOR NAME '=' exp_list DO . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 187
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 176

   26 for_cycle: FOR exp_list IN exp_list DO . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 188
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 177

   36 attr: '<' NAME '>' .

    $default  reduce using rule 36 (attr)


State 178

   34 attr_list: attr_list ',' NAME attr .

    $default  reduce using rule 34 (attr_list)


State 179

   33 else_if: ELSEIF exp THEN block .

    $default  reduce using rule 33 (else_if)


State 180

   32 else_if: else_if ELSEIF exp THEN . block

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    FUNCTION   shift, and go to state 7
    BREAK      shift, and go to state 8
    LABEL_DEF  shift, and go to state 9
    IF         shift, and go to state 10
    LOCAL      shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 189
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    if_start       go to state 23
    label          go to state 24
    var_list       go to state 25
    var            go to state 26
    prefix_exp     go to state 27
    function_call  go to state 28


State 181

   30 statement: if_start else_if ELSE block END .

    $default  reduce using rule 30 (statement)


State 182

   56 function_body: '(' ')' block END .

    $default  reduce using rule 56 (function_body)


State 183

   57 function_body: '(' par_list ')' block . END

    END  shift, and go to state 190


State 184

   69 name_list: name_list ',' NAME .

    $default  reduce using rule 69 (name_list)


State 185

   65 par_list: name_list ',' DOTS .

    $default  reduce using rule 65 (par_list)


State 186

   77 field: '[' exp ']' '=' . exp

    INT         shift, and go to state 30
    HEX         shift, and go to state 31
    FLOAT       shift, and go to state 32
    HEX_FLOAT   shift, and go to state 33
    ONEQSTRING  shift, and go to state 34
    TWOQSTRING  shift, and go to state 35
    LONGSTRING  shift, and go to state 36
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 37
    NIL         shift, and go to state 38
    FALSE       shift, and go to state 39
    TRUE        shift, and go to state 40
    FUNCTION    shift, and go to state 41
    MINUS       shift, and go to state 42
    UNOP        shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 45

    var            go to state 46
    prefix_exp     go to state 27
    function_def   go to state 47
    function_call  go to state 48
    table_body     go to state 49
    exp            go to state 191
    literalString  go to state 51
    numeral        go to state 52


State 187

   25 for_cycle: FOR NAME '=' exp_list DO block . END

    END  shift, and go to state 192


State 188

   26 for_cycle: FOR exp_list IN exp_list DO block . END

    END  shift, and go to state 193


State 189

   32 else_if: else_if ELSEIF exp THEN block .

    $default  reduce using rule 32 (else_if)


State 190

   57 function_body: '(' par_list ')' block END .

    $default  reduce using rule 57 (function_body)


State 191

   77 field: '[' exp ']' '=' exp .
   87 exp: exp . BINOP exp
   88    | exp . MINUS exp
   89    | exp . '<' exp
   90    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 77 (field)


State 192

   25 for_cycle: FOR NAME '=' exp_list DO block END .

    $default  reduce using rule 25 (for_cycle)


State 193

   26 for_cycle: FOR exp_list IN exp_list DO block END .

    $default  reduce using rule 26 (for_cycle)
