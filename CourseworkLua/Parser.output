Terminals unused in grammar

   COMMENT
   '/'


Состояние 27 конфликты: 1 сдвига/вывода


Грамматика

    0 $accept: main $end

    1 main: line
    2     | main line

    3 line: x_convol ENDL
    4     | var_convol ENDL

    5 var_convol: VAR '=' x_convol
    6           | '#' VAR

    7 x_convol: LETTER
    8         | number
    9         | VAR
   10         | '(' x_convol ')'
   11         | '-' x_convol
   12         | x_convol '+' x_convol
   13         | x_convol '-' x_convol
   14         | x_convol '*' x_convol
   15         | x_convol '^' x_convol
   16         | abb_mult

   17 abb_mult: number LETTER
   18         | number LETTER '^' x_convol

   19 number: DIGIT
   20       | number DIGIT


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'#' (35) 6
'(' (40) 10
')' (41) 10
'*' (42) 14
'+' (43) 12
'-' (45) 11 13
'/' (47)
'=' (61) 5
'^' (94) 15 18
error (256)
DIGIT (258) 19 20
LETTER (259) 7 17 18
ENDL (260) 3 4
VAR (261) 5 6 9
COMMENT (262)
UMINUS (263)


Нетерминальные символы с правилами, в которых они появляются

$accept (18)
    налево: 0
main (19)
    налево: 1 2, направо: 0 2
line (20)
    налево: 3 4, направо: 1 2
var_convol (21)
    налево: 5 6, направо: 4
x_convol (22)
    налево: 7 8 9 10 11 12 13 14 15 16, направо: 3 5 10 11 12 13 14
    15 18
abb_mult (23)
    налево: 17 18, направо: 16
number (24)
    налево: 19 20, направо: 8 17 18 20


состояние 0

    0 $accept: . main $end

    DIGIT   сдвиг, и переход в состояние 1
    LETTER  сдвиг, и переход в состояние 2
    VAR     сдвиг, и переход в состояние 3
    '-'     сдвиг, и переход в состояние 4
    '('     сдвиг, и переход в состояние 5
    '#'     сдвиг, и переход в состояние 6

    main        переход в состояние 7
    line        переход в состояние 8
    var_convol  переход в состояние 9
    x_convol    переход в состояние 10
    abb_mult    переход в состояние 11
    number      переход в состояние 12


состояние 1

   19 number: DIGIT .

    $default  вывод с использованием правила 19 (number)


состояние 2

    7 x_convol: LETTER .

    $default  вывод с использованием правила 7 (x_convol)


состояние 3

    5 var_convol: VAR . '=' x_convol
    9 x_convol: VAR .

    '='  сдвиг, и переход в состояние 13

    $default  вывод с использованием правила 9 (x_convol)


состояние 4

   11 x_convol: '-' . x_convol

    DIGIT   сдвиг, и переход в состояние 1
    LETTER  сдвиг, и переход в состояние 2
    VAR     сдвиг, и переход в состояние 14
    '-'     сдвиг, и переход в состояние 4
    '('     сдвиг, и переход в состояние 5

    x_convol  переход в состояние 15
    abb_mult  переход в состояние 11
    number    переход в состояние 12


состояние 5

   10 x_convol: '(' . x_convol ')'

    DIGIT   сдвиг, и переход в состояние 1
    LETTER  сдвиг, и переход в состояние 2
    VAR     сдвиг, и переход в состояние 14
    '-'     сдвиг, и переход в состояние 4
    '('     сдвиг, и переход в состояние 5

    x_convol  переход в состояние 16
    abb_mult  переход в состояние 11
    number    переход в состояние 12


состояние 6

    6 var_convol: '#' . VAR

    VAR  сдвиг, и переход в состояние 17


состояние 7

    0 $accept: main . $end
    2 main: main . line

    $end    сдвиг, и переход в состояние 18
    DIGIT   сдвиг, и переход в состояние 1
    LETTER  сдвиг, и переход в состояние 2
    VAR     сдвиг, и переход в состояние 3
    '-'     сдвиг, и переход в состояние 4
    '('     сдвиг, и переход в состояние 5
    '#'     сдвиг, и переход в состояние 6

    line        переход в состояние 19
    var_convol  переход в состояние 9
    x_convol    переход в состояние 10
    abb_mult    переход в состояние 11
    number      переход в состояние 12


состояние 8

    1 main: line .

    $default  вывод с использованием правила 1 (main)


состояние 9

    4 line: var_convol . ENDL

    ENDL  сдвиг, и переход в состояние 20


состояние 10

    3 line: x_convol . ENDL
   12 x_convol: x_convol . '+' x_convol
   13         | x_convol . '-' x_convol
   14         | x_convol . '*' x_convol
   15         | x_convol . '^' x_convol

    ENDL  сдвиг, и переход в состояние 21
    '+'   сдвиг, и переход в состояние 22
    '-'   сдвиг, и переход в состояние 23
    '*'   сдвиг, и переход в состояние 24
    '^'   сдвиг, и переход в состояние 25


состояние 11

   16 x_convol: abb_mult .

    $default  вывод с использованием правила 16 (x_convol)


состояние 12

    8 x_convol: number .
   17 abb_mult: number . LETTER
   18         | number . LETTER '^' x_convol
   20 number: number . DIGIT

    DIGIT   сдвиг, и переход в состояние 26
    LETTER  сдвиг, и переход в состояние 27

    $default  вывод с использованием правила 8 (x_convol)


состояние 13

    5 var_convol: VAR '=' . x_convol

    DIGIT   сдвиг, и переход в состояние 1
    LETTER  сдвиг, и переход в состояние 2
    VAR     сдвиг, и переход в состояние 14
    '-'     сдвиг, и переход в состояние 4
    '('     сдвиг, и переход в состояние 5

    x_convol  переход в состояние 28
    abb_mult  переход в состояние 11
    number    переход в состояние 12


состояние 14

    9 x_convol: VAR .

    $default  вывод с использованием правила 9 (x_convol)


состояние 15

   11 x_convol: '-' x_convol .
   12         | x_convol . '+' x_convol
   13         | x_convol . '-' x_convol
   14         | x_convol . '*' x_convol
   15         | x_convol . '^' x_convol

    $default  вывод с использованием правила 11 (x_convol)


состояние 16

   10 x_convol: '(' x_convol . ')'
   12         | x_convol . '+' x_convol
   13         | x_convol . '-' x_convol
   14         | x_convol . '*' x_convol
   15         | x_convol . '^' x_convol

    '+'  сдвиг, и переход в состояние 22
    '-'  сдвиг, и переход в состояние 23
    ')'  сдвиг, и переход в состояние 29
    '*'  сдвиг, и переход в состояние 24
    '^'  сдвиг, и переход в состояние 25


состояние 17

    6 var_convol: '#' VAR .

    $default  вывод с использованием правила 6 (var_convol)


состояние 18

    0 $accept: main $end .

    $default  accept


состояние 19

    2 main: main line .

    $default  вывод с использованием правила 2 (main)


состояние 20

    4 line: var_convol ENDL .

    $default  вывод с использованием правила 4 (line)


состояние 21

    3 line: x_convol ENDL .

    $default  вывод с использованием правила 3 (line)


состояние 22

   12 x_convol: x_convol '+' . x_convol

    DIGIT   сдвиг, и переход в состояние 1
    LETTER  сдвиг, и переход в состояние 2
    VAR     сдвиг, и переход в состояние 14
    '-'     сдвиг, и переход в состояние 4
    '('     сдвиг, и переход в состояние 5

    x_convol  переход в состояние 30
    abb_mult  переход в состояние 11
    number    переход в состояние 12


состояние 23

   13 x_convol: x_convol '-' . x_convol

    DIGIT   сдвиг, и переход в состояние 1
    LETTER  сдвиг, и переход в состояние 2
    VAR     сдвиг, и переход в состояние 14
    '-'     сдвиг, и переход в состояние 4
    '('     сдвиг, и переход в состояние 5

    x_convol  переход в состояние 31
    abb_mult  переход в состояние 11
    number    переход в состояние 12


состояние 24

   14 x_convol: x_convol '*' . x_convol

    DIGIT   сдвиг, и переход в состояние 1
    LETTER  сдвиг, и переход в состояние 2
    VAR     сдвиг, и переход в состояние 14
    '-'     сдвиг, и переход в состояние 4
    '('     сдвиг, и переход в состояние 5

    x_convol  переход в состояние 32
    abb_mult  переход в состояние 11
    number    переход в состояние 12


состояние 25

   15 x_convol: x_convol '^' . x_convol

    DIGIT   сдвиг, и переход в состояние 1
    LETTER  сдвиг, и переход в состояние 2
    VAR     сдвиг, и переход в состояние 14
    '-'     сдвиг, и переход в состояние 4
    '('     сдвиг, и переход в состояние 5

    x_convol  переход в состояние 33
    abb_mult  переход в состояние 11
    number    переход в состояние 12


состояние 26

   20 number: number DIGIT .

    $default  вывод с использованием правила 20 (number)


состояние 27

   17 abb_mult: number LETTER .
   18         | number LETTER . '^' x_convol

    '^'  сдвиг, и переход в состояние 34

    '^'       [вывод с использованием правила 17 (abb_mult)]
    $default  вывод с использованием правила 17 (abb_mult)


состояние 28

    5 var_convol: VAR '=' x_convol .
   12 x_convol: x_convol . '+' x_convol
   13         | x_convol . '-' x_convol
   14         | x_convol . '*' x_convol
   15         | x_convol . '^' x_convol

    '+'  сдвиг, и переход в состояние 22
    '-'  сдвиг, и переход в состояние 23
    '*'  сдвиг, и переход в состояние 24
    '^'  сдвиг, и переход в состояние 25

    $default  вывод с использованием правила 5 (var_convol)


состояние 29

   10 x_convol: '(' x_convol ')' .

    $default  вывод с использованием правила 10 (x_convol)


состояние 30

   12 x_convol: x_convol . '+' x_convol
   12         | x_convol '+' x_convol .
   13         | x_convol . '-' x_convol
   14         | x_convol . '*' x_convol
   15         | x_convol . '^' x_convol

    '*'  сдвиг, и переход в состояние 24
    '^'  сдвиг, и переход в состояние 25

    $default  вывод с использованием правила 12 (x_convol)


состояние 31

   12 x_convol: x_convol . '+' x_convol
   13         | x_convol . '-' x_convol
   13         | x_convol '-' x_convol .
   14         | x_convol . '*' x_convol
   15         | x_convol . '^' x_convol

    '*'  сдвиг, и переход в состояние 24
    '^'  сдвиг, и переход в состояние 25

    $default  вывод с использованием правила 13 (x_convol)


состояние 32

   12 x_convol: x_convol . '+' x_convol
   13         | x_convol . '-' x_convol
   14         | x_convol . '*' x_convol
   14         | x_convol '*' x_convol .
   15         | x_convol . '^' x_convol

    '^'  сдвиг, и переход в состояние 25

    $default  вывод с использованием правила 14 (x_convol)


состояние 33

   12 x_convol: x_convol . '+' x_convol
   13         | x_convol . '-' x_convol
   14         | x_convol . '*' x_convol
   15         | x_convol . '^' x_convol
   15         | x_convol '^' x_convol .

    '^'  сдвиг, и переход в состояние 25

    $default  вывод с использованием правила 15 (x_convol)


состояние 34

   18 abb_mult: number LETTER '^' . x_convol

    DIGIT   сдвиг, и переход в состояние 1
    LETTER  сдвиг, и переход в состояние 2
    VAR     сдвиг, и переход в состояние 14
    '-'     сдвиг, и переход в состояние 4
    '('     сдвиг, и переход в состояние 5

    x_convol  переход в состояние 35
    abb_mult  переход в состояние 11
    number    переход в состояние 12


состояние 35

   12 x_convol: x_convol . '+' x_convol
   13         | x_convol . '-' x_convol
   14         | x_convol . '*' x_convol
   15         | x_convol . '^' x_convol
   18 abb_mult: number LETTER '^' x_convol .

    '^'  сдвиг, и переход в состояние 25

    $default  вывод с использованием правила 18 (abb_mult)
