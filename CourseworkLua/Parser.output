Terminals unused in grammar

   TWOQ
   ONEQ
   NESTED_STR
   ELSE


State 0 conflicts: 13 shift/reduce
State 2 conflicts: 13 shift/reduce
State 5 conflicts: 13 shift/reduce
State 16 conflicts: 14 shift/reduce, 4 reduce/reduce
State 27 conflicts: 1 reduce/reduce
State 75 conflicts: 4 shift/reduce
State 76 conflicts: 4 shift/reduce
State 88 conflicts: 13 shift/reduce
State 93 conflicts: 13 shift/reduce
State 118 conflicts: 13 shift/reduce
State 127 conflicts: 4 shift/reduce
State 128 conflicts: 4 shift/reduce
State 130 conflicts: 4 shift/reduce
State 131 conflicts: 4 shift/reduce
State 150 conflicts: 13 shift/reduce
State 156 conflicts: 13 shift/reduce
State 179 conflicts: 13 shift/reduce
State 182 conflicts: 13 shift/reduce


Grammar

    0 $accept: main $end

    1 main: block

    2 block: stat_list
    3      | stat_list ret

    4 stat_list: stat_list opt_stat
    5          | opt_stat

    6 opt_stat: stat
    7         | /* empty */

    8 stat: ';'
    9     | var_list '=' exp_list
   10     | function_call
   11     | label
   12     | BREAK
   13     | GOTO NAME
   14     | while_do
   15     | statement
   16     | for_cycle
   17     | FUNCTION function_name function_body
   18     | locals

   19 while_do: DO block END
   20         | WHILE exp DO block END
   21         | REPEAT block UNTIL exp

   22 locals: LOCAL FUNCTION NAME function_body
   23       | LOCAL attr_list
   24       | LOCAL attr_list '=' exp_list

   25 for_cycle: FOR NAME '=' cycle_exp_list DO block END

   26 cycle_exp_list: cycle_exp_list ',' exp
   27               | exp ',' exp

   28 statement: IF exp THEN block END
   29          | IF exp THEN block else_if END

   30 else_if: else_if ELSEIF exp THEN block
   31        | ELSEIF exp THEN block

   32 attr_list: attr_list ',' NAME attr
   33          | NAME attr

   34 attr: '<' NAME '>'
   35     | /* empty */

   36 ret: RETURN
   37    | RETURN ';'
   38    | RETURN exp_list
   39    | RETURN exp_list ';'

   40 label: LABEL_DEF NAME LABEL_DEF

   41 function_name: function_name_part
   42              | function_name_part ':' NAME

   43 function_name_part: function_name_part '.' NAME
   44                   | NAME

   45 var_list: var_list ',' var
   46         | var

   47 var: NAME
   48    | prefix_exp '[' exp ']'
   49    | prefix_exp '.' NAME

   50 prefix_exp: var
   51           | function_call
   52           | '(' exp ')'

   53 function_def: FUNCTION function_body

   54 function_body: '(' ')' block END
   55              | '(' par_list ')' block END

   56 function_call: prefix_exp args
   57              | prefix_exp ':' NAME args

   58 args: '(' ')'
   59     | '(' exp_list ')'
   60     | '(' name_list ')'
   61     | table_body
   62     | literalString

   63 par_list: name_list
   64         | name_list ',' DOTS
   65         | DOTS

   66 exp_list: exp_list ',' exp
   67         | exp

   68 name_list: name_list ',' NAME
   69          | NAME

   70 table_body: '{' '}'
   71           | '{' field_list '}'

   72 field_list: field_list_part field_sep
   73           | field_list_part

   74 field_list_part: field_list_part field_sep field
   75                | field

   76 field: '[' exp ']' '=' exp
   77      | NAME '=' exp
   78      | exp

   79 field_sep: ','
   80          | ';'

   81 exp: NIL
   82    | FALSE
   83    | TRUE
   84    | DOTS
   85    | exp BINOP exp
   86    | exp MINUS exp
   87    | exp '<' exp
   88    | exp '>' exp
   89    | MINUS exp
   90    | UNOP exp
   91    | numeral
   92    | literalString
   93    | table_body
   94    | function_def

   95 literalString: ONEQSTRING
   96              | TWOQSTRING
   97              | LONGSTRING

   98 numeral: INT
   99        | HEX
  100        | FLOAT
  101        | HEX_FLOAT


Terminals, with rules where they appear

$end (0) 0
'(' (40) 52 54 55 58 59 60
')' (41) 52 54 55 58 59 60
',' (44) 26 27 32 45 64 66 68 79
'.' (46) 43 49
':' (58) 42 57
';' (59) 8 37 39 80
'<' (60) 34 87
'=' (61) 9 24 25 76 77
'>' (62) 34 88
'[' (91) 48 76
']' (93) 48 76
'{' (123) 70 71
'}' (125) 70 71
error (256)
INT (258) 98
HEX (259) 99
FLOAT (260) 100
HEX_FLOAT (261) 101
TWOQ (262)
ONEQ (263)
ONEQSTRING (264) 95
TWOQSTRING (265) 96
LONGSTRING (266) 97
NESTED_STR (267)
NAME (268) 13 22 25 32 33 34 40 42 43 44 47 49 57 68 69 77
DOTS (269) 64 65 84
NIL (270) 81
FALSE (271) 82
TRUE (272) 83
BINOP (273) 85
UNOP (274) 90
MINUS (275) 86 89
DO (276) 19 20 25
WHILE (277) 20
FOR (278) 25
UNTIL (279) 21
REPEAT (280) 21
END (281) 19 20 25 28 29 54 55
GOTO (282) 13
IF (283) 28 29
THEN (284) 28 29 30 31
ELSEIF (285) 30 31
ELSE (286)
LOCAL (287) 22 23 24
FUNCTION (288) 17 22 53
BREAK (289) 12
RETURN (290) 36 37 38 39
LABEL_DEF (291) 40


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
main (51)
    on left: 1, on right: 0
block (52)
    on left: 2 3, on right: 1 19 20 21 25 28 29 30 31 54 55
stat_list (53)
    on left: 4 5, on right: 2 3 4
opt_stat (54)
    on left: 6 7, on right: 4 5
stat (55)
    on left: 8 9 10 11 12 13 14 15 16 17 18, on right: 6
while_do (56)
    on left: 19 20 21, on right: 14
locals (57)
    on left: 22 23 24, on right: 18
for_cycle (58)
    on left: 25, on right: 16
cycle_exp_list (59)
    on left: 26 27, on right: 25 26
statement (60)
    on left: 28 29, on right: 15
else_if (61)
    on left: 30 31, on right: 29 30
attr_list (62)
    on left: 32 33, on right: 23 24 32
attr (63)
    on left: 34 35, on right: 32 33
ret (64)
    on left: 36 37 38 39, on right: 3
label (65)
    on left: 40, on right: 11
function_name (66)
    on left: 41 42, on right: 17
function_name_part (67)
    on left: 43 44, on right: 41 42 43
var_list (68)
    on left: 45 46, on right: 9 45
var (69)
    on left: 47 48 49, on right: 45 46 50
prefix_exp (70)
    on left: 50 51 52, on right: 48 49 56 57
function_def (71)
    on left: 53, on right: 94
function_body (72)
    on left: 54 55, on right: 17 22 53
function_call (73)
    on left: 56 57, on right: 10 51
args (74)
    on left: 58 59 60 61 62, on right: 56 57
par_list (75)
    on left: 63 64 65, on right: 55
exp_list (76)
    on left: 66 67, on right: 9 24 38 39 59 66
name_list (77)
    on left: 68 69, on right: 60 63 64 68
table_body (78)
    on left: 70 71, on right: 61 93
field_list (79)
    on left: 72 73, on right: 71
field_list_part (80)
    on left: 74 75, on right: 72 73 74
field (81)
    on left: 76 77 78, on right: 74 75
field_sep (82)
    on left: 79 80, on right: 72 74
exp (83)
    on left: 81 82 83 84 85 86 87 88 89 90 91 92 93 94, on right: 20
    21 26 27 28 29 30 31 48 52 66 67 76 77 78 85 86 87 88 89 90
literalString (84)
    on left: 95 96 97, on right: 62 92
numeral (85)
    on left: 98 99 100 101, on right: 91


State 0

    0 $accept: . main $end

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    main           go to state 14
    block          go to state 15
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 1

   47 var: NAME .

    $default  reduce using rule 47 (var)


State 2

   19 while_do: DO . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 28
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 3

   20 while_do: WHILE . exp DO block END

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 46
    literalString  go to state 47
    numeral        go to state 48


State 4

   25 for_cycle: FOR . NAME '=' cycle_exp_list DO block END

    NAME  shift, and go to state 49


State 5

   21 while_do: REPEAT . block UNTIL exp

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 50
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 6

   13 stat: GOTO . NAME

    NAME  shift, and go to state 51


State 7

   28 statement: IF . exp THEN block END
   29          | IF . exp THEN block else_if END

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 52
    literalString  go to state 47
    numeral        go to state 48


State 8

   22 locals: LOCAL . FUNCTION NAME function_body
   23       | LOCAL . attr_list
   24       | LOCAL . attr_list '=' exp_list

    NAME      shift, and go to state 53
    FUNCTION  shift, and go to state 54

    attr_list  go to state 55


State 9

   17 stat: FUNCTION . function_name function_body

    NAME  shift, and go to state 56

    function_name       go to state 57
    function_name_part  go to state 58


State 10

   12 stat: BREAK .

    $default  reduce using rule 12 (stat)


State 11

   40 label: LABEL_DEF . NAME LABEL_DEF

    NAME  shift, and go to state 59


State 12

    8 stat: ';' .

    $default  reduce using rule 8 (stat)


State 13

   52 prefix_exp: '(' . exp ')'

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 60
    literalString  go to state 47
    numeral        go to state 48


State 14

    0 $accept: main . $end

    $end  shift, and go to state 61


State 15

    1 main: block .

    $default  reduce using rule 1 (main)


State 16

    2 block: stat_list .
    3      | stat_list . ret
    4 stat_list: stat_list . opt_stat

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    RETURN     shift, and go to state 62
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    $end       reduce using rule 2 (block)
    $end       [reduce using rule 7 (opt_stat)]
    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    UNTIL      reduce using rule 2 (block)
    UNTIL      [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    END        reduce using rule 2 (block)
    END        [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    ELSEIF     reduce using rule 2 (block)
    ELSEIF     [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    RETURN     [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 2 (block)

    opt_stat       go to state 63
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    ret            go to state 64
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 17

    5 stat_list: opt_stat .

    $default  reduce using rule 5 (stat_list)


State 18

    6 opt_stat: stat .

    $default  reduce using rule 6 (opt_stat)


State 19

   14 stat: while_do .

    $default  reduce using rule 14 (stat)


State 20

   18 stat: locals .

    $default  reduce using rule 18 (stat)


State 21

   16 stat: for_cycle .

    $default  reduce using rule 16 (stat)


State 22

   15 stat: statement .

    $default  reduce using rule 15 (stat)


State 23

   11 stat: label .

    $default  reduce using rule 11 (stat)


State 24

    9 stat: var_list . '=' exp_list
   45 var_list: var_list . ',' var

    '='  shift, and go to state 65
    ','  shift, and go to state 66


State 25

   46 var_list: var .
   50 prefix_exp: var .

    '='       reduce using rule 46 (var_list)
    ','       reduce using rule 46 (var_list)
    $default  reduce using rule 50 (prefix_exp)


State 26

   48 var: prefix_exp . '[' exp ']'
   49    | prefix_exp . '.' NAME
   56 function_call: prefix_exp . args
   57              | prefix_exp . ':' NAME args

    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    ':'         shift, and go to state 67
    '.'         shift, and go to state 68
    '['         shift, and go to state 69
    '('         shift, and go to state 70
    '{'         shift, and go to state 43

    args           go to state 71
    table_body     go to state 72
    literalString  go to state 73


State 27

   10 stat: function_call .
   51 prefix_exp: function_call .

    ONEQSTRING  reduce using rule 51 (prefix_exp)
    TWOQSTRING  reduce using rule 51 (prefix_exp)
    LONGSTRING  reduce using rule 51 (prefix_exp)
    ':'         reduce using rule 51 (prefix_exp)
    '.'         reduce using rule 51 (prefix_exp)
    '['         reduce using rule 51 (prefix_exp)
    '('         reduce using rule 10 (stat)
    '('         [reduce using rule 51 (prefix_exp)]
    '{'         reduce using rule 51 (prefix_exp)
    $default    reduce using rule 10 (stat)


State 28

   19 while_do: DO block . END

    END  shift, and go to state 74


State 29

   98 numeral: INT .

    $default  reduce using rule 98 (numeral)


State 30

   99 numeral: HEX .

    $default  reduce using rule 99 (numeral)


State 31

  100 numeral: FLOAT .

    $default  reduce using rule 100 (numeral)


State 32

  101 numeral: HEX_FLOAT .

    $default  reduce using rule 101 (numeral)


State 33

   95 literalString: ONEQSTRING .

    $default  reduce using rule 95 (literalString)


State 34

   96 literalString: TWOQSTRING .

    $default  reduce using rule 96 (literalString)


State 35

   97 literalString: LONGSTRING .

    $default  reduce using rule 97 (literalString)


State 36

   84 exp: DOTS .

    $default  reduce using rule 84 (exp)


State 37

   81 exp: NIL .

    $default  reduce using rule 81 (exp)


State 38

   82 exp: FALSE .

    $default  reduce using rule 82 (exp)


State 39

   83 exp: TRUE .

    $default  reduce using rule 83 (exp)


State 40

   90 exp: UNOP . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 75
    literalString  go to state 47
    numeral        go to state 48


State 41

   89 exp: MINUS . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 76
    literalString  go to state 47
    numeral        go to state 48


State 42

   53 function_def: FUNCTION . function_body

    '('  shift, and go to state 77

    function_body  go to state 78


State 43

   70 table_body: '{' . '}'
   71           | '{' . field_list '}'

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 79
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '['         shift, and go to state 80
    '{'         shift, and go to state 43
    '}'         shift, and go to state 81

    function_def     go to state 44
    table_body       go to state 45
    field_list       go to state 82
    field_list_part  go to state 83
    field            go to state 84
    exp              go to state 85
    literalString    go to state 47
    numeral          go to state 48


State 44

   94 exp: function_def .

    $default  reduce using rule 94 (exp)


State 45

   93 exp: table_body .

    $default  reduce using rule 93 (exp)


State 46

   20 while_do: WHILE exp . DO block END
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    DO     shift, and go to state 88
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90


State 47

   92 exp: literalString .

    $default  reduce using rule 92 (exp)


State 48

   91 exp: numeral .

    $default  reduce using rule 91 (exp)


State 49

   25 for_cycle: FOR NAME . '=' cycle_exp_list DO block END

    '='  shift, and go to state 91


State 50

   21 while_do: REPEAT block . UNTIL exp

    UNTIL  shift, and go to state 92


State 51

   13 stat: GOTO NAME .

    $default  reduce using rule 13 (stat)


State 52

   28 statement: IF exp . THEN block END
   29          | IF exp . THEN block else_if END
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    THEN   shift, and go to state 93
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90


State 53

   33 attr_list: NAME . attr

    '<'  shift, and go to state 94

    $default  reduce using rule 35 (attr)

    attr  go to state 95


State 54

   22 locals: LOCAL FUNCTION . NAME function_body

    NAME  shift, and go to state 96


State 55

   23 locals: LOCAL attr_list .
   24       | LOCAL attr_list . '=' exp_list
   32 attr_list: attr_list . ',' NAME attr

    '='  shift, and go to state 97
    ','  shift, and go to state 98

    $default  reduce using rule 23 (locals)


State 56

   44 function_name_part: NAME .

    $default  reduce using rule 44 (function_name_part)


State 57

   17 stat: FUNCTION function_name . function_body

    '('  shift, and go to state 77

    function_body  go to state 99


State 58

   41 function_name: function_name_part .
   42              | function_name_part . ':' NAME
   43 function_name_part: function_name_part . '.' NAME

    ':'  shift, and go to state 100
    '.'  shift, and go to state 101

    $default  reduce using rule 41 (function_name)


State 59

   40 label: LABEL_DEF NAME . LABEL_DEF

    LABEL_DEF  shift, and go to state 102


State 60

   52 prefix_exp: '(' exp . ')'
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90
    ')'    shift, and go to state 103


State 61

    0 $accept: main $end .

    $default  accept


State 62

   36 ret: RETURN .
   37    | RETURN . ';'
   38    | RETURN . exp_list
   39    | RETURN . exp_list ';'

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    ';'         shift, and go to state 104
    '{'         shift, and go to state 43

    $default  reduce using rule 36 (ret)

    function_def   go to state 44
    exp_list       go to state 105
    table_body     go to state 45
    exp            go to state 106
    literalString  go to state 47
    numeral        go to state 48


State 63

    4 stat_list: stat_list opt_stat .

    $default  reduce using rule 4 (stat_list)


State 64

    3 block: stat_list ret .

    $default  reduce using rule 3 (block)


State 65

    9 stat: var_list '=' . exp_list

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    exp_list       go to state 107
    table_body     go to state 45
    exp            go to state 106
    literalString  go to state 47
    numeral        go to state 48


State 66

   45 var_list: var_list ',' . var

    NAME  shift, and go to state 1
    '('   shift, and go to state 13

    var            go to state 108
    prefix_exp     go to state 26
    function_call  go to state 109


State 67

   57 function_call: prefix_exp ':' . NAME args

    NAME  shift, and go to state 110


State 68

   49 var: prefix_exp '.' . NAME

    NAME  shift, and go to state 111


State 69

   48 var: prefix_exp '[' . exp ']'

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 112
    literalString  go to state 47
    numeral        go to state 48


State 70

   58 args: '(' . ')'
   59     | '(' . exp_list ')'
   60     | '(' . name_list ')'

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 113
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    ')'         shift, and go to state 114
    '{'         shift, and go to state 43

    function_def   go to state 44
    exp_list       go to state 115
    name_list      go to state 116
    table_body     go to state 45
    exp            go to state 106
    literalString  go to state 47
    numeral        go to state 48


State 71

   56 function_call: prefix_exp args .

    $default  reduce using rule 56 (function_call)


State 72

   61 args: table_body .

    $default  reduce using rule 61 (args)


State 73

   62 args: literalString .

    $default  reduce using rule 62 (args)


State 74

   19 while_do: DO block END .

    $default  reduce using rule 19 (while_do)


State 75

   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp
   90    | UNOP exp .

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    BINOP     [reduce using rule 90 (exp)]
    MINUS     [reduce using rule 90 (exp)]
    '<'       [reduce using rule 90 (exp)]
    '>'       [reduce using rule 90 (exp)]
    $default  reduce using rule 90 (exp)


State 76

   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp
   89    | MINUS exp .

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    BINOP     [reduce using rule 89 (exp)]
    MINUS     [reduce using rule 89 (exp)]
    '<'       [reduce using rule 89 (exp)]
    '>'       [reduce using rule 89 (exp)]
    $default  reduce using rule 89 (exp)


State 77

   54 function_body: '(' . ')' block END
   55              | '(' . par_list ')' block END

    NAME  shift, and go to state 113
    DOTS  shift, and go to state 117
    ')'   shift, and go to state 118

    par_list   go to state 119
    name_list  go to state 120


State 78

   53 function_def: FUNCTION function_body .

    $default  reduce using rule 53 (function_def)


State 79

   77 field: NAME . '=' exp

    '='  shift, and go to state 121


State 80

   76 field: '[' . exp ']' '=' exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 122
    literalString  go to state 47
    numeral        go to state 48


State 81

   70 table_body: '{' '}' .

    $default  reduce using rule 70 (table_body)


State 82

   71 table_body: '{' field_list . '}'

    '}'  shift, and go to state 123


State 83

   72 field_list: field_list_part . field_sep
   73           | field_list_part .
   74 field_list_part: field_list_part . field_sep field

    ';'  shift, and go to state 124
    ','  shift, and go to state 125

    $default  reduce using rule 73 (field_list)

    field_sep  go to state 126


State 84

   75 field_list_part: field .

    $default  reduce using rule 75 (field_list_part)


State 85

   78 field: exp .
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    $default  reduce using rule 78 (field)


State 86

   85 exp: exp BINOP . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 127
    literalString  go to state 47
    numeral        go to state 48


State 87

   86 exp: exp MINUS . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 128
    literalString  go to state 47
    numeral        go to state 48


State 88

   20 while_do: WHILE exp DO . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 129
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 89

   87 exp: exp '<' . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 130
    literalString  go to state 47
    numeral        go to state 48


State 90

   88 exp: exp '>' . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 131
    literalString  go to state 47
    numeral        go to state 48


State 91

   25 for_cycle: FOR NAME '=' . cycle_exp_list DO block END

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    cycle_exp_list  go to state 132
    function_def    go to state 44
    table_body      go to state 45
    exp             go to state 133
    literalString   go to state 47
    numeral         go to state 48


State 92

   21 while_do: REPEAT block UNTIL . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 134
    literalString  go to state 47
    numeral        go to state 48


State 93

   28 statement: IF exp THEN . block END
   29          | IF exp THEN . block else_if END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 135
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 94

   34 attr: '<' . NAME '>'

    NAME  shift, and go to state 136


State 95

   33 attr_list: NAME attr .

    $default  reduce using rule 33 (attr_list)


State 96

   22 locals: LOCAL FUNCTION NAME . function_body

    '('  shift, and go to state 77

    function_body  go to state 137


State 97

   24 locals: LOCAL attr_list '=' . exp_list

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    exp_list       go to state 138
    table_body     go to state 45
    exp            go to state 106
    literalString  go to state 47
    numeral        go to state 48


State 98

   32 attr_list: attr_list ',' . NAME attr

    NAME  shift, and go to state 139


State 99

   17 stat: FUNCTION function_name function_body .

    $default  reduce using rule 17 (stat)


State 100

   42 function_name: function_name_part ':' . NAME

    NAME  shift, and go to state 140


State 101

   43 function_name_part: function_name_part '.' . NAME

    NAME  shift, and go to state 141


State 102

   40 label: LABEL_DEF NAME LABEL_DEF .

    $default  reduce using rule 40 (label)


State 103

   52 prefix_exp: '(' exp ')' .

    $default  reduce using rule 52 (prefix_exp)


State 104

   37 ret: RETURN ';' .

    $default  reduce using rule 37 (ret)


State 105

   38 ret: RETURN exp_list .
   39    | RETURN exp_list . ';'
   66 exp_list: exp_list . ',' exp

    ';'  shift, and go to state 142
    ','  shift, and go to state 143

    $default  reduce using rule 38 (ret)


State 106

   67 exp_list: exp .
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    $default  reduce using rule 67 (exp_list)


State 107

    9 stat: var_list '=' exp_list .
   66 exp_list: exp_list . ',' exp

    ','  shift, and go to state 143

    $default  reduce using rule 9 (stat)


State 108

   45 var_list: var_list ',' var .
   50 prefix_exp: var .

    '='       reduce using rule 45 (var_list)
    ','       reduce using rule 45 (var_list)
    $default  reduce using rule 50 (prefix_exp)


State 109

   51 prefix_exp: function_call .

    $default  reduce using rule 51 (prefix_exp)


State 110

   57 function_call: prefix_exp ':' NAME . args

    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    '('         shift, and go to state 70
    '{'         shift, and go to state 43

    args           go to state 144
    table_body     go to state 72
    literalString  go to state 73


State 111

   49 var: prefix_exp '.' NAME .

    $default  reduce using rule 49 (var)


State 112

   48 var: prefix_exp '[' exp . ']'
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90
    ']'    shift, and go to state 145


State 113

   69 name_list: NAME .

    $default  reduce using rule 69 (name_list)


State 114

   58 args: '(' ')' .

    $default  reduce using rule 58 (args)


State 115

   59 args: '(' exp_list . ')'
   66 exp_list: exp_list . ',' exp

    ','  shift, and go to state 143
    ')'  shift, and go to state 146


State 116

   60 args: '(' name_list . ')'
   68 name_list: name_list . ',' NAME

    ','  shift, and go to state 147
    ')'  shift, and go to state 148


State 117

   65 par_list: DOTS .

    $default  reduce using rule 65 (par_list)


State 118

   54 function_body: '(' ')' . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 149
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 119

   55 function_body: '(' par_list . ')' block END

    ')'  shift, and go to state 150


State 120

   63 par_list: name_list .
   64         | name_list . ',' DOTS
   68 name_list: name_list . ',' NAME

    ','  shift, and go to state 151

    $default  reduce using rule 63 (par_list)


State 121

   77 field: NAME '=' . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 152
    literalString  go to state 47
    numeral        go to state 48


State 122

   76 field: '[' exp . ']' '=' exp
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90
    ']'    shift, and go to state 153


State 123

   71 table_body: '{' field_list '}' .

    $default  reduce using rule 71 (table_body)


State 124

   80 field_sep: ';' .

    $default  reduce using rule 80 (field_sep)


State 125

   79 field_sep: ',' .

    $default  reduce using rule 79 (field_sep)


State 126

   72 field_list: field_list_part field_sep .
   74 field_list_part: field_list_part field_sep . field

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 79
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '['         shift, and go to state 80
    '{'         shift, and go to state 43

    $default  reduce using rule 72 (field_list)

    function_def   go to state 44
    table_body     go to state 45
    field          go to state 154
    exp            go to state 85
    literalString  go to state 47
    numeral        go to state 48


State 127

   85 exp: exp . BINOP exp
   85    | exp BINOP exp .
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    BINOP     [reduce using rule 85 (exp)]
    MINUS     [reduce using rule 85 (exp)]
    '<'       [reduce using rule 85 (exp)]
    '>'       [reduce using rule 85 (exp)]
    $default  reduce using rule 85 (exp)


State 128

   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   86    | exp MINUS exp .
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    BINOP     [reduce using rule 86 (exp)]
    MINUS     [reduce using rule 86 (exp)]
    '<'       [reduce using rule 86 (exp)]
    '>'       [reduce using rule 86 (exp)]
    $default  reduce using rule 86 (exp)


State 129

   20 while_do: WHILE exp DO block . END

    END  shift, and go to state 155


State 130

   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   87    | exp '<' exp .
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    BINOP     [reduce using rule 87 (exp)]
    MINUS     [reduce using rule 87 (exp)]
    '<'       [reduce using rule 87 (exp)]
    '>'       [reduce using rule 87 (exp)]
    $default  reduce using rule 87 (exp)


State 131

   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp
   88    | exp '>' exp .

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    BINOP     [reduce using rule 88 (exp)]
    MINUS     [reduce using rule 88 (exp)]
    '<'       [reduce using rule 88 (exp)]
    '>'       [reduce using rule 88 (exp)]
    $default  reduce using rule 88 (exp)


State 132

   25 for_cycle: FOR NAME '=' cycle_exp_list . DO block END
   26 cycle_exp_list: cycle_exp_list . ',' exp

    DO   shift, and go to state 156
    ','  shift, and go to state 157


State 133

   27 cycle_exp_list: exp . ',' exp
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    ','    shift, and go to state 158
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90


State 134

   21 while_do: REPEAT block UNTIL exp .
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    $default  reduce using rule 21 (while_do)


State 135

   28 statement: IF exp THEN block . END
   29          | IF exp THEN block . else_if END

    END     shift, and go to state 159
    ELSEIF  shift, and go to state 160

    else_if  go to state 161


State 136

   34 attr: '<' NAME . '>'

    '>'  shift, and go to state 162


State 137

   22 locals: LOCAL FUNCTION NAME function_body .

    $default  reduce using rule 22 (locals)


State 138

   24 locals: LOCAL attr_list '=' exp_list .
   66 exp_list: exp_list . ',' exp

    ','  shift, and go to state 143

    $default  reduce using rule 24 (locals)


State 139

   32 attr_list: attr_list ',' NAME . attr

    '<'  shift, and go to state 94

    $default  reduce using rule 35 (attr)

    attr  go to state 163


State 140

   42 function_name: function_name_part ':' NAME .

    $default  reduce using rule 42 (function_name)


State 141

   43 function_name_part: function_name_part '.' NAME .

    $default  reduce using rule 43 (function_name_part)


State 142

   39 ret: RETURN exp_list ';' .

    $default  reduce using rule 39 (ret)


State 143

   66 exp_list: exp_list ',' . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 164
    literalString  go to state 47
    numeral        go to state 48


State 144

   57 function_call: prefix_exp ':' NAME args .

    $default  reduce using rule 57 (function_call)


State 145

   48 var: prefix_exp '[' exp ']' .

    $default  reduce using rule 48 (var)


State 146

   59 args: '(' exp_list ')' .

    $default  reduce using rule 59 (args)


State 147

   68 name_list: name_list ',' . NAME

    NAME  shift, and go to state 165


State 148

   60 args: '(' name_list ')' .

    $default  reduce using rule 60 (args)


State 149

   54 function_body: '(' ')' block . END

    END  shift, and go to state 166


State 150

   55 function_body: '(' par_list ')' . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 167
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 151

   64 par_list: name_list ',' . DOTS
   68 name_list: name_list ',' . NAME

    NAME  shift, and go to state 165
    DOTS  shift, and go to state 168


State 152

   77 field: NAME '=' exp .
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    $default  reduce using rule 77 (field)


State 153

   76 field: '[' exp ']' . '=' exp

    '='  shift, and go to state 169


State 154

   74 field_list_part: field_list_part field_sep field .

    $default  reduce using rule 74 (field_list_part)


State 155

   20 while_do: WHILE exp DO block END .

    $default  reduce using rule 20 (while_do)


State 156

   25 for_cycle: FOR NAME '=' cycle_exp_list DO . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 170
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 157

   26 cycle_exp_list: cycle_exp_list ',' . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 171
    literalString  go to state 47
    numeral        go to state 48


State 158

   27 cycle_exp_list: exp ',' . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 172
    literalString  go to state 47
    numeral        go to state 48


State 159

   28 statement: IF exp THEN block END .

    $default  reduce using rule 28 (statement)


State 160

   31 else_if: ELSEIF . exp THEN block

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 173
    literalString  go to state 47
    numeral        go to state 48


State 161

   29 statement: IF exp THEN block else_if . END
   30 else_if: else_if . ELSEIF exp THEN block

    END     shift, and go to state 174
    ELSEIF  shift, and go to state 175


State 162

   34 attr: '<' NAME '>' .

    $default  reduce using rule 34 (attr)


State 163

   32 attr_list: attr_list ',' NAME attr .

    $default  reduce using rule 32 (attr_list)


State 164

   66 exp_list: exp_list ',' exp .
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    $default  reduce using rule 66 (exp_list)


State 165

   68 name_list: name_list ',' NAME .

    $default  reduce using rule 68 (name_list)


State 166

   54 function_body: '(' ')' block END .

    $default  reduce using rule 54 (function_body)


State 167

   55 function_body: '(' par_list ')' block . END

    END  shift, and go to state 176


State 168

   64 par_list: name_list ',' DOTS .

    $default  reduce using rule 64 (par_list)


State 169

   76 field: '[' exp ']' '=' . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 177
    literalString  go to state 47
    numeral        go to state 48


State 170

   25 for_cycle: FOR NAME '=' cycle_exp_list DO block . END

    END  shift, and go to state 178


State 171

   26 cycle_exp_list: cycle_exp_list ',' exp .
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    $default  reduce using rule 26 (cycle_exp_list)


State 172

   27 cycle_exp_list: exp ',' exp .
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    $default  reduce using rule 27 (cycle_exp_list)


State 173

   31 else_if: ELSEIF exp . THEN block
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    THEN   shift, and go to state 179
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90


State 174

   29 statement: IF exp THEN block else_if END .

    $default  reduce using rule 29 (statement)


State 175

   30 else_if: else_if ELSEIF . exp THEN block

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '{'         shift, and go to state 43

    function_def   go to state 44
    table_body     go to state 45
    exp            go to state 180
    literalString  go to state 47
    numeral        go to state 48


State 176

   55 function_body: '(' par_list ')' block END .

    $default  reduce using rule 55 (function_body)


State 177

   76 field: '[' exp ']' '=' exp .
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90

    $default  reduce using rule 76 (field)


State 178

   25 for_cycle: FOR NAME '=' cycle_exp_list DO block END .

    $default  reduce using rule 25 (for_cycle)


State 179

   31 else_if: ELSEIF exp THEN . block

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 181
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 180

   30 else_if: else_if ELSEIF exp . THEN block
   85 exp: exp . BINOP exp
   86    | exp . MINUS exp
   87    | exp . '<' exp
   88    | exp . '>' exp

    BINOP  shift, and go to state 86
    MINUS  shift, and go to state 87
    THEN   shift, and go to state 182
    '<'    shift, and go to state 89
    '>'    shift, and go to state 90


State 181

   31 else_if: ELSEIF exp THEN block .

    $default  reduce using rule 31 (else_if)


State 182

   30 else_if: else_if ELSEIF exp THEN . block

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 183
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 183

   30 else_if: else_if ELSEIF exp THEN block .

    $default  reduce using rule 30 (else_if)
