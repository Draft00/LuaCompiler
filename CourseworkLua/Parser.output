Terminals unused in grammar

   TWOQ
   ONEQ
   NESTED_STR
   UMINUS


State 31 conflicts: 1 reduce/reduce
State 49 conflicts: 1 shift/reduce
State 88 conflicts: 2 shift/reduce
State 89 conflicts: 2 shift/reduce
State 143 conflicts: 2 shift/reduce
State 144 conflicts: 2 shift/reduce
State 145 conflicts: 2 shift/reduce
State 146 conflicts: 2 shift/reduce


Grammar

    0 $accept: main $end

    1 main: block

    2 block: stat_list block_ret

    3 block_ret: ret
    4          | /* empty */

    5 stat_list: stat_list stat
    6          | /* empty */

    7 stat: ';'
    8     | var_list '=' exp_list
    9     | function_call
   10     | label
   11     | BREAK
   12     | GOTO NAME
   13     | while_do
   14     | statement
   15     | for_cycle
   16     | FUNCTION function_name function_body
   17     | locals

   18 while_do: DO block END
   19         | WHILE exp DO block END
   20         | REPEAT block UNTIL exp

   21 locals: LOCAL FUNCTION NAME function_body
   22       | LOCAL attr_list
   23       | LOCAL attr_list '=' exp_list

   24 for_cycle: FOR NAME '=' exp_list DO block END
   25          | FOR exp_list IN exp_list DO block END

   26 statement: if_start END
   27          | if_start else_if END
   28          | if_start ELSE block END
   29          | if_start else_if ELSE block END

   30 if_start: IF exp THEN block

   31 else_if: else_if ELSEIF exp THEN block
   32        | ELSEIF exp THEN block

   33 attr_list: attr_list ',' NAME attr
   34          | NAME attr

   35 attr: '<' NAME '>'
   36     | /* empty */

   37 ret: RETURN ret_wrap_exp ret_wrap_endl

   38 ret_wrap_endl: ';'
   39              | /* empty */

   40 ret_wrap_exp: exp_list
   41             | /* empty */

   42 label: LABEL_DEF NAME LABEL_DEF

   43 function_name: function_name_part
   44              | function_name_part ':' NAME

   45 function_name_part: function_name_part '.' NAME
   46                   | NAME

   47 var_list: var_list ',' var
   48         | var

   49 var: NAME
   50    | prefix_exp '[' exp ']'
   51    | prefix_exp '.' NAME

   52 prefix_exp: var
   53           | function_call
   54           | '(' exp ')'

   55 function_def: FUNCTION function_body

   56 function_body: '(' ')' block END
   57              | '(' par_list ')' block END

   58 function_call: prefix_exp args
   59              | prefix_exp ':' NAME args

   60 args: '(' ')'
   61     | '(' exp_list ')'
   62     | table_body
   63     | literalString

   64 par_list: name_list
   65         | name_list ',' DOTS
   66         | DOTS

   67 exp_list: exp_list ',' exp
   68         | exp

   69 name_list: name_list ',' NAME
   70          | NAME

   71 table_body: '{' '}'
   72           | '{' field_list '}'

   73 field_list: field_list_part field_sep
   74           | field_list_part

   75 field_list_part: field_list_part field_sep field
   76                | field

   77 field: '[' exp ']' '=' exp
   78      | NAME '=' exp
   79      | exp

   80 field_sep: ','
   81          | ';'

   82 exp: NIL
   83    | FALSE
   84    | TRUE
   85    | DOTS
   86    | exp BINOP exp
   87    | exp MINUS exp
   88    | exp '<' exp
   89    | exp '>' exp
   90    | MINUS exp
   91    | UNOP exp
   92    | numeral
   93    | literalString
   94    | table_body
   95    | function_def
   96    | prefix_exp

   97 literalString: ONEQSTRING
   98              | TWOQSTRING
   99              | LONGSTRING

  100 numeral: INT
  101        | HEX
  102        | FLOAT
  103        | HEX_FLOAT


Terminals, with rules where they appear

$end (0) 0
'(' (40) 54 56 57 60 61
')' (41) 54 56 57 60 61
',' (44) 33 47 65 67 69 80
'.' (46) 45 51
':' (58) 44 59
';' (59) 7 38 81
'<' (60) 35 88
'=' (61) 8 23 24 77 78
'>' (62) 35 89
'[' (91) 50 77
']' (93) 50 77
'{' (123) 71 72
'}' (125) 71 72
error (256)
INT (258) 100
HEX (259) 101
FLOAT (260) 102
HEX_FLOAT (261) 103
TWOQ (262)
ONEQ (263)
ONEQSTRING (264) 97
TWOQSTRING (265) 98
LONGSTRING (266) 99
NESTED_STR (267)
NAME (268) 12 21 24 33 34 35 42 44 45 46 49 51 59 69 70 78
DOTS (269) 65 66 85
NIL (270) 82
FALSE (271) 83
TRUE (272) 84
DO (273) 18 19 24 25
WHILE (274) 19
FOR (275) 24 25
UNTIL (276) 20
REPEAT (277) 20
END (278) 18 19 24 25 26 27 28 29 56 57
GOTO (279) 12
IN (280) 25
FUNCTION (281) 16 21 55
BREAK (282) 11
RETURN (283) 37
LABEL_DEF (284) 42
IF (285) 30
THEN (286) 30 31 32
ELSEIF (287) 31 32
ELSE (288) 28 29
LOCAL (289) 21 22 23
MINUS (290) 87 90
UNOP (291) 91
BINOP (292) 86
UMINUS (293)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
main (53)
    on left: 1, on right: 0
block (54)
    on left: 2, on right: 1 18 19 20 24 25 28 29 30 31 32 56 57
block_ret (55)
    on left: 3 4, on right: 2
stat_list (56)
    on left: 5 6, on right: 2 5
stat (57)
    on left: 7 8 9 10 11 12 13 14 15 16 17, on right: 5
while_do (58)
    on left: 18 19 20, on right: 13
locals (59)
    on left: 21 22 23, on right: 17
for_cycle (60)
    on left: 24 25, on right: 15
statement (61)
    on left: 26 27 28 29, on right: 14
if_start (62)
    on left: 30, on right: 26 27 28 29
else_if (63)
    on left: 31 32, on right: 27 29 31
attr_list (64)
    on left: 33 34, on right: 22 23 33
attr (65)
    on left: 35 36, on right: 33 34
ret (66)
    on left: 37, on right: 3
ret_wrap_endl (67)
    on left: 38 39, on right: 37
ret_wrap_exp (68)
    on left: 40 41, on right: 37
label (69)
    on left: 42, on right: 10
function_name (70)
    on left: 43 44, on right: 16
function_name_part (71)
    on left: 45 46, on right: 43 44 45
var_list (72)
    on left: 47 48, on right: 8 47
var (73)
    on left: 49 50 51, on right: 47 48 52
prefix_exp (74)
    on left: 52 53 54, on right: 50 51 58 59 96
function_def (75)
    on left: 55, on right: 95
function_body (76)
    on left: 56 57, on right: 16 21 55
function_call (77)
    on left: 58 59, on right: 9 53
args (78)
    on left: 60 61 62 63, on right: 58 59
par_list (79)
    on left: 64 65 66, on right: 57
exp_list (80)
    on left: 67 68, on right: 8 23 24 25 40 61 67
name_list (81)
    on left: 69 70, on right: 64 65 69
table_body (82)
    on left: 71 72, on right: 62 94
field_list (83)
    on left: 73 74, on right: 72
field_list_part (84)
    on left: 75 76, on right: 73 74 75
field (85)
    on left: 77 78 79, on right: 75 76
field_sep (86)
    on left: 80 81, on right: 73 75
exp (87)
    on left: 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96, on right:
    19 20 30 31 32 50 54 67 68 77 78 79 86 87 88 89 90 91
literalString (88)
    on left: 97 98 99, on right: 63 93
numeral (89)
    on left: 100 101 102 103, on right: 92


State 0

    0 $accept: . main $end

    $default  reduce using rule 6 (stat_list)

    main       go to state 1
    block      go to state 2
    stat_list  go to state 3


State 1

    0 $accept: main . $end

    $end  shift, and go to state 4


State 2

    1 main: block .

    $default  reduce using rule 1 (main)


State 3

    2 block: stat_list . block_ret
    5 stat_list: stat_list . stat

    NAME       shift, and go to state 5
    DO         shift, and go to state 6
    WHILE      shift, and go to state 7
    FOR        shift, and go to state 8
    REPEAT     shift, and go to state 9
    GOTO       shift, and go to state 10
    FUNCTION   shift, and go to state 11
    BREAK      shift, and go to state 12
    RETURN     shift, and go to state 13
    LABEL_DEF  shift, and go to state 14
    IF         shift, and go to state 15
    LOCAL      shift, and go to state 16
    ';'        shift, and go to state 17
    '('        shift, and go to state 18

    $default  reduce using rule 4 (block_ret)

    block_ret      go to state 19
    stat           go to state 20
    while_do       go to state 21
    locals         go to state 22
    for_cycle      go to state 23
    statement      go to state 24
    if_start       go to state 25
    ret            go to state 26
    label          go to state 27
    var_list       go to state 28
    var            go to state 29
    prefix_exp     go to state 30
    function_call  go to state 31


State 4

    0 $accept: main $end .

    $default  accept


State 5

   49 var: NAME .

    $default  reduce using rule 49 (var)


State 6

   18 while_do: DO . block END

    $default  reduce using rule 6 (stat_list)

    block      go to state 32
    stat_list  go to state 3


State 7

   19 while_do: WHILE . exp DO block END

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 53
    literalString  go to state 54
    numeral        go to state 55


State 8

   24 for_cycle: FOR . NAME '=' exp_list DO block END
   25          | FOR . exp_list IN exp_list DO block END

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 56
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    exp_list       go to state 57
    table_body     go to state 52
    exp            go to state 58
    literalString  go to state 54
    numeral        go to state 55


State 9

   20 while_do: REPEAT . block UNTIL exp

    $default  reduce using rule 6 (stat_list)

    block      go to state 59
    stat_list  go to state 3


State 10

   12 stat: GOTO . NAME

    NAME  shift, and go to state 60


State 11

   16 stat: FUNCTION . function_name function_body

    NAME  shift, and go to state 61

    function_name       go to state 62
    function_name_part  go to state 63


State 12

   11 stat: BREAK .

    $default  reduce using rule 11 (stat)


State 13

   37 ret: RETURN . ret_wrap_exp ret_wrap_endl

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    $default  reduce using rule 41 (ret_wrap_exp)

    ret_wrap_exp   go to state 64
    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    exp_list       go to state 65
    table_body     go to state 52
    exp            go to state 58
    literalString  go to state 54
    numeral        go to state 55


State 14

   42 label: LABEL_DEF . NAME LABEL_DEF

    NAME  shift, and go to state 66


State 15

   30 if_start: IF . exp THEN block

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 67
    literalString  go to state 54
    numeral        go to state 55


State 16

   21 locals: LOCAL . FUNCTION NAME function_body
   22       | LOCAL . attr_list
   23       | LOCAL . attr_list '=' exp_list

    NAME      shift, and go to state 68
    FUNCTION  shift, and go to state 69

    attr_list  go to state 70


State 17

    7 stat: ';' .

    $default  reduce using rule 7 (stat)


State 18

   54 prefix_exp: '(' . exp ')'

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 71
    literalString  go to state 54
    numeral        go to state 55


State 19

    2 block: stat_list block_ret .

    $default  reduce using rule 2 (block)


State 20

    5 stat_list: stat_list stat .

    $default  reduce using rule 5 (stat_list)


State 21

   13 stat: while_do .

    $default  reduce using rule 13 (stat)


State 22

   17 stat: locals .

    $default  reduce using rule 17 (stat)


State 23

   15 stat: for_cycle .

    $default  reduce using rule 15 (stat)


State 24

   14 stat: statement .

    $default  reduce using rule 14 (stat)


State 25

   26 statement: if_start . END
   27          | if_start . else_if END
   28          | if_start . ELSE block END
   29          | if_start . else_if ELSE block END

    END     shift, and go to state 72
    ELSEIF  shift, and go to state 73
    ELSE    shift, and go to state 74

    else_if  go to state 75


State 26

    3 block_ret: ret .

    $default  reduce using rule 3 (block_ret)


State 27

   10 stat: label .

    $default  reduce using rule 10 (stat)


State 28

    8 stat: var_list . '=' exp_list
   47 var_list: var_list . ',' var

    '='  shift, and go to state 76
    ','  shift, and go to state 77


State 29

   48 var_list: var .
   52 prefix_exp: var .

    '='       reduce using rule 48 (var_list)
    ','       reduce using rule 48 (var_list)
    $default  reduce using rule 52 (prefix_exp)


State 30

   50 var: prefix_exp . '[' exp ']'
   51    | prefix_exp . '.' NAME
   58 function_call: prefix_exp . args
   59              | prefix_exp . ':' NAME args

    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    ':'         shift, and go to state 78
    '.'         shift, and go to state 79
    '['         shift, and go to state 80
    '('         shift, and go to state 81
    '{'         shift, and go to state 47

    args           go to state 82
    table_body     go to state 83
    literalString  go to state 84


State 31

    9 stat: function_call .
   53 prefix_exp: function_call .

    ONEQSTRING  reduce using rule 53 (prefix_exp)
    TWOQSTRING  reduce using rule 53 (prefix_exp)
    LONGSTRING  reduce using rule 53 (prefix_exp)
    ':'         reduce using rule 53 (prefix_exp)
    '.'         reduce using rule 53 (prefix_exp)
    '['         reduce using rule 53 (prefix_exp)
    '('         reduce using rule 9 (stat)
    '('         [reduce using rule 53 (prefix_exp)]
    '{'         reduce using rule 53 (prefix_exp)
    $default    reduce using rule 9 (stat)


State 32

   18 while_do: DO block . END

    END  shift, and go to state 85


State 33

  100 numeral: INT .

    $default  reduce using rule 100 (numeral)


State 34

  101 numeral: HEX .

    $default  reduce using rule 101 (numeral)


State 35

  102 numeral: FLOAT .

    $default  reduce using rule 102 (numeral)


State 36

  103 numeral: HEX_FLOAT .

    $default  reduce using rule 103 (numeral)


State 37

   97 literalString: ONEQSTRING .

    $default  reduce using rule 97 (literalString)


State 38

   98 literalString: TWOQSTRING .

    $default  reduce using rule 98 (literalString)


State 39

   99 literalString: LONGSTRING .

    $default  reduce using rule 99 (literalString)


State 40

   85 exp: DOTS .

    $default  reduce using rule 85 (exp)


State 41

   82 exp: NIL .

    $default  reduce using rule 82 (exp)


State 42

   83 exp: FALSE .

    $default  reduce using rule 83 (exp)


State 43

   84 exp: TRUE .

    $default  reduce using rule 84 (exp)


State 44

   55 function_def: FUNCTION . function_body

    '('  shift, and go to state 86

    function_body  go to state 87


State 45

   90 exp: MINUS . exp

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 88
    literalString  go to state 54
    numeral        go to state 55


State 46

   91 exp: UNOP . exp

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 89
    literalString  go to state 54
    numeral        go to state 55


State 47

   71 table_body: '{' . '}'
   72           | '{' . field_list '}'

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 90
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '['         shift, and go to state 91
    '('         shift, and go to state 18
    '{'         shift, and go to state 47
    '}'         shift, and go to state 92

    var              go to state 48
    prefix_exp       go to state 49
    function_def     go to state 50
    function_call    go to state 51
    table_body       go to state 52
    field_list       go to state 93
    field_list_part  go to state 94
    field            go to state 95
    exp              go to state 96
    literalString    go to state 54
    numeral          go to state 55


State 48

   52 prefix_exp: var .

    $default  reduce using rule 52 (prefix_exp)


State 49

   50 var: prefix_exp . '[' exp ']'
   51    | prefix_exp . '.' NAME
   58 function_call: prefix_exp . args
   59              | prefix_exp . ':' NAME args
   96 exp: prefix_exp .

    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    ':'         shift, and go to state 78
    '.'         shift, and go to state 79
    '['         shift, and go to state 80
    '('         shift, and go to state 81
    '{'         shift, and go to state 47

    '('       [reduce using rule 96 (exp)]
    $default  reduce using rule 96 (exp)

    args           go to state 82
    table_body     go to state 83
    literalString  go to state 84


State 50

   95 exp: function_def .

    $default  reduce using rule 95 (exp)


State 51

   53 prefix_exp: function_call .

    $default  reduce using rule 53 (prefix_exp)


State 52

   94 exp: table_body .

    $default  reduce using rule 94 (exp)


State 53

   19 while_do: WHILE exp . DO block END
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    DO     shift, and go to state 97
    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101


State 54

   93 exp: literalString .

    $default  reduce using rule 93 (exp)


State 55

   92 exp: numeral .

    $default  reduce using rule 92 (exp)


State 56

   24 for_cycle: FOR NAME . '=' exp_list DO block END
   49 var: NAME .

    '='  shift, and go to state 102

    $default  reduce using rule 49 (var)


State 57

   25 for_cycle: FOR exp_list . IN exp_list DO block END
   67 exp_list: exp_list . ',' exp

    IN   shift, and go to state 103
    ','  shift, and go to state 104


State 58

   68 exp_list: exp .
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 68 (exp_list)


State 59

   20 while_do: REPEAT block . UNTIL exp

    UNTIL  shift, and go to state 105


State 60

   12 stat: GOTO NAME .

    $default  reduce using rule 12 (stat)


State 61

   46 function_name_part: NAME .

    $default  reduce using rule 46 (function_name_part)


State 62

   16 stat: FUNCTION function_name . function_body

    '('  shift, and go to state 86

    function_body  go to state 106


State 63

   43 function_name: function_name_part .
   44              | function_name_part . ':' NAME
   45 function_name_part: function_name_part . '.' NAME

    ':'  shift, and go to state 107
    '.'  shift, and go to state 108

    $default  reduce using rule 43 (function_name)


State 64

   37 ret: RETURN ret_wrap_exp . ret_wrap_endl

    ';'  shift, and go to state 109

    $default  reduce using rule 39 (ret_wrap_endl)

    ret_wrap_endl  go to state 110


State 65

   40 ret_wrap_exp: exp_list .
   67 exp_list: exp_list . ',' exp

    ','  shift, and go to state 104

    $default  reduce using rule 40 (ret_wrap_exp)


State 66

   42 label: LABEL_DEF NAME . LABEL_DEF

    LABEL_DEF  shift, and go to state 111


State 67

   30 if_start: IF exp . THEN block
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    THEN   shift, and go to state 112
    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101


State 68

   34 attr_list: NAME . attr

    '<'  shift, and go to state 113

    $default  reduce using rule 36 (attr)

    attr  go to state 114


State 69

   21 locals: LOCAL FUNCTION . NAME function_body

    NAME  shift, and go to state 115


State 70

   22 locals: LOCAL attr_list .
   23       | LOCAL attr_list . '=' exp_list
   33 attr_list: attr_list . ',' NAME attr

    '='  shift, and go to state 116
    ','  shift, and go to state 117

    $default  reduce using rule 22 (locals)


State 71

   54 prefix_exp: '(' exp . ')'
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    ')'    shift, and go to state 118


State 72

   26 statement: if_start END .

    $default  reduce using rule 26 (statement)


State 73

   32 else_if: ELSEIF . exp THEN block

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 119
    literalString  go to state 54
    numeral        go to state 55


State 74

   28 statement: if_start ELSE . block END

    $default  reduce using rule 6 (stat_list)

    block      go to state 120
    stat_list  go to state 3


State 75

   27 statement: if_start else_if . END
   29          | if_start else_if . ELSE block END
   31 else_if: else_if . ELSEIF exp THEN block

    END     shift, and go to state 121
    ELSEIF  shift, and go to state 122
    ELSE    shift, and go to state 123


State 76

    8 stat: var_list '=' . exp_list

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    exp_list       go to state 124
    table_body     go to state 52
    exp            go to state 58
    literalString  go to state 54
    numeral        go to state 55


State 77

   47 var_list: var_list ',' . var

    NAME  shift, and go to state 5
    '('   shift, and go to state 18

    var            go to state 125
    prefix_exp     go to state 30
    function_call  go to state 51


State 78

   59 function_call: prefix_exp ':' . NAME args

    NAME  shift, and go to state 126


State 79

   51 var: prefix_exp '.' . NAME

    NAME  shift, and go to state 127


State 80

   50 var: prefix_exp '[' . exp ']'

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 128
    literalString  go to state 54
    numeral        go to state 55


State 81

   60 args: '(' . ')'
   61     | '(' . exp_list ')'

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    ')'         shift, and go to state 129
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    exp_list       go to state 130
    table_body     go to state 52
    exp            go to state 58
    literalString  go to state 54
    numeral        go to state 55


State 82

   58 function_call: prefix_exp args .

    $default  reduce using rule 58 (function_call)


State 83

   62 args: table_body .

    $default  reduce using rule 62 (args)


State 84

   63 args: literalString .

    $default  reduce using rule 63 (args)


State 85

   18 while_do: DO block END .

    $default  reduce using rule 18 (while_do)


State 86

   56 function_body: '(' . ')' block END
   57              | '(' . par_list ')' block END

    NAME  shift, and go to state 131
    DOTS  shift, and go to state 132
    ')'   shift, and go to state 133

    par_list   go to state 134
    name_list  go to state 135


State 87

   55 function_def: FUNCTION function_body .

    $default  reduce using rule 55 (function_def)


State 88

   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp
   90    | MINUS exp .

    '<'  shift, and go to state 100
    '>'  shift, and go to state 101

    '<'       [reduce using rule 90 (exp)]
    '>'       [reduce using rule 90 (exp)]
    $default  reduce using rule 90 (exp)


State 89

   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp
   91    | UNOP exp .

    '<'  shift, and go to state 100
    '>'  shift, and go to state 101

    '<'       [reduce using rule 91 (exp)]
    '>'       [reduce using rule 91 (exp)]
    $default  reduce using rule 91 (exp)


State 90

   49 var: NAME .
   78 field: NAME . '=' exp

    '='  shift, and go to state 136

    $default  reduce using rule 49 (var)


State 91

   77 field: '[' . exp ']' '=' exp

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 137
    literalString  go to state 54
    numeral        go to state 55


State 92

   71 table_body: '{' '}' .

    $default  reduce using rule 71 (table_body)


State 93

   72 table_body: '{' field_list . '}'

    '}'  shift, and go to state 138


State 94

   73 field_list: field_list_part . field_sep
   74           | field_list_part .
   75 field_list_part: field_list_part . field_sep field

    ';'  shift, and go to state 139
    ','  shift, and go to state 140

    $default  reduce using rule 74 (field_list)

    field_sep  go to state 141


State 95

   76 field_list_part: field .

    $default  reduce using rule 76 (field_list_part)


State 96

   79 field: exp .
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 79 (field)


State 97

   19 while_do: WHILE exp DO . block END

    $default  reduce using rule 6 (stat_list)

    block      go to state 142
    stat_list  go to state 3


State 98

   87 exp: exp MINUS . exp

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 143
    literalString  go to state 54
    numeral        go to state 55


State 99

   86 exp: exp BINOP . exp

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 144
    literalString  go to state 54
    numeral        go to state 55


State 100

   88 exp: exp '<' . exp

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 145
    literalString  go to state 54
    numeral        go to state 55


State 101

   89 exp: exp '>' . exp

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 146
    literalString  go to state 54
    numeral        go to state 55


State 102

   24 for_cycle: FOR NAME '=' . exp_list DO block END

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    exp_list       go to state 147
    table_body     go to state 52
    exp            go to state 58
    literalString  go to state 54
    numeral        go to state 55


State 103

   25 for_cycle: FOR exp_list IN . exp_list DO block END

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    exp_list       go to state 148
    table_body     go to state 52
    exp            go to state 58
    literalString  go to state 54
    numeral        go to state 55


State 104

   67 exp_list: exp_list ',' . exp

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 149
    literalString  go to state 54
    numeral        go to state 55


State 105

   20 while_do: REPEAT block UNTIL . exp

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 150
    literalString  go to state 54
    numeral        go to state 55


State 106

   16 stat: FUNCTION function_name function_body .

    $default  reduce using rule 16 (stat)


State 107

   44 function_name: function_name_part ':' . NAME

    NAME  shift, and go to state 151


State 108

   45 function_name_part: function_name_part '.' . NAME

    NAME  shift, and go to state 152


State 109

   38 ret_wrap_endl: ';' .

    $default  reduce using rule 38 (ret_wrap_endl)


State 110

   37 ret: RETURN ret_wrap_exp ret_wrap_endl .

    $default  reduce using rule 37 (ret)


State 111

   42 label: LABEL_DEF NAME LABEL_DEF .

    $default  reduce using rule 42 (label)


State 112

   30 if_start: IF exp THEN . block

    $default  reduce using rule 6 (stat_list)

    block      go to state 153
    stat_list  go to state 3


State 113

   35 attr: '<' . NAME '>'

    NAME  shift, and go to state 154


State 114

   34 attr_list: NAME attr .

    $default  reduce using rule 34 (attr_list)


State 115

   21 locals: LOCAL FUNCTION NAME . function_body

    '('  shift, and go to state 86

    function_body  go to state 155


State 116

   23 locals: LOCAL attr_list '=' . exp_list

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    exp_list       go to state 156
    table_body     go to state 52
    exp            go to state 58
    literalString  go to state 54
    numeral        go to state 55


State 117

   33 attr_list: attr_list ',' . NAME attr

    NAME  shift, and go to state 157


State 118

   54 prefix_exp: '(' exp ')' .

    $default  reduce using rule 54 (prefix_exp)


State 119

   32 else_if: ELSEIF exp . THEN block
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    THEN   shift, and go to state 158
    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101


State 120

   28 statement: if_start ELSE block . END

    END  shift, and go to state 159


State 121

   27 statement: if_start else_if END .

    $default  reduce using rule 27 (statement)


State 122

   31 else_if: else_if ELSEIF . exp THEN block

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 160
    literalString  go to state 54
    numeral        go to state 55


State 123

   29 statement: if_start else_if ELSE . block END

    $default  reduce using rule 6 (stat_list)

    block      go to state 161
    stat_list  go to state 3


State 124

    8 stat: var_list '=' exp_list .
   67 exp_list: exp_list . ',' exp

    ','  shift, and go to state 104

    $default  reduce using rule 8 (stat)


State 125

   47 var_list: var_list ',' var .
   52 prefix_exp: var .

    '='       reduce using rule 47 (var_list)
    ','       reduce using rule 47 (var_list)
    $default  reduce using rule 52 (prefix_exp)


State 126

   59 function_call: prefix_exp ':' NAME . args

    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    '('         shift, and go to state 81
    '{'         shift, and go to state 47

    args           go to state 162
    table_body     go to state 83
    literalString  go to state 84


State 127

   51 var: prefix_exp '.' NAME .

    $default  reduce using rule 51 (var)


State 128

   50 var: prefix_exp '[' exp . ']'
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    ']'    shift, and go to state 163


State 129

   60 args: '(' ')' .

    $default  reduce using rule 60 (args)


State 130

   61 args: '(' exp_list . ')'
   67 exp_list: exp_list . ',' exp

    ','  shift, and go to state 104
    ')'  shift, and go to state 164


State 131

   70 name_list: NAME .

    $default  reduce using rule 70 (name_list)


State 132

   66 par_list: DOTS .

    $default  reduce using rule 66 (par_list)


State 133

   56 function_body: '(' ')' . block END

    $default  reduce using rule 6 (stat_list)

    block      go to state 165
    stat_list  go to state 3


State 134

   57 function_body: '(' par_list . ')' block END

    ')'  shift, and go to state 166


State 135

   64 par_list: name_list .
   65         | name_list . ',' DOTS
   69 name_list: name_list . ',' NAME

    ','  shift, and go to state 167

    $default  reduce using rule 64 (par_list)


State 136

   78 field: NAME '=' . exp

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 168
    literalString  go to state 54
    numeral        go to state 55


State 137

   77 field: '[' exp . ']' '=' exp
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    ']'    shift, and go to state 169


State 138

   72 table_body: '{' field_list '}' .

    $default  reduce using rule 72 (table_body)


State 139

   81 field_sep: ';' .

    $default  reduce using rule 81 (field_sep)


State 140

   80 field_sep: ',' .

    $default  reduce using rule 80 (field_sep)


State 141

   73 field_list: field_list_part field_sep .
   75 field_list_part: field_list_part field_sep . field

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 90
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '['         shift, and go to state 91
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    $default  reduce using rule 73 (field_list)

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    field          go to state 170
    exp            go to state 96
    literalString  go to state 54
    numeral        go to state 55


State 142

   19 while_do: WHILE exp DO block . END

    END  shift, and go to state 171


State 143

   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   87    | exp MINUS exp .
   88    | exp . '<' exp
   89    | exp . '>' exp

    '<'  shift, and go to state 100
    '>'  shift, and go to state 101

    '<'       [reduce using rule 87 (exp)]
    '>'       [reduce using rule 87 (exp)]
    $default  reduce using rule 87 (exp)


State 144

   86 exp: exp . BINOP exp
   86    | exp BINOP exp .
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    '<'  shift, and go to state 100
    '>'  shift, and go to state 101

    '<'       [reduce using rule 86 (exp)]
    '>'       [reduce using rule 86 (exp)]
    $default  reduce using rule 86 (exp)


State 145

   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   88    | exp '<' exp .
   89    | exp . '>' exp

    '<'  shift, and go to state 100
    '>'  shift, and go to state 101

    '<'       [reduce using rule 88 (exp)]
    '>'       [reduce using rule 88 (exp)]
    $default  reduce using rule 88 (exp)


State 146

   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp
   89    | exp '>' exp .

    '<'  shift, and go to state 100
    '>'  shift, and go to state 101

    '<'       [reduce using rule 89 (exp)]
    '>'       [reduce using rule 89 (exp)]
    $default  reduce using rule 89 (exp)


State 147

   24 for_cycle: FOR NAME '=' exp_list . DO block END
   67 exp_list: exp_list . ',' exp

    DO   shift, and go to state 172
    ','  shift, and go to state 104


State 148

   25 for_cycle: FOR exp_list IN exp_list . DO block END
   67 exp_list: exp_list . ',' exp

    DO   shift, and go to state 173
    ','  shift, and go to state 104


State 149

   67 exp_list: exp_list ',' exp .
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 67 (exp_list)


State 150

   20 while_do: REPEAT block UNTIL exp .
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 20 (while_do)


State 151

   44 function_name: function_name_part ':' NAME .

    $default  reduce using rule 44 (function_name)


State 152

   45 function_name_part: function_name_part '.' NAME .

    $default  reduce using rule 45 (function_name_part)


State 153

   30 if_start: IF exp THEN block .

    $default  reduce using rule 30 (if_start)


State 154

   35 attr: '<' NAME . '>'

    '>'  shift, and go to state 174


State 155

   21 locals: LOCAL FUNCTION NAME function_body .

    $default  reduce using rule 21 (locals)


State 156

   23 locals: LOCAL attr_list '=' exp_list .
   67 exp_list: exp_list . ',' exp

    ','  shift, and go to state 104

    $default  reduce using rule 23 (locals)


State 157

   33 attr_list: attr_list ',' NAME . attr

    '<'  shift, and go to state 113

    $default  reduce using rule 36 (attr)

    attr  go to state 175


State 158

   32 else_if: ELSEIF exp THEN . block

    $default  reduce using rule 6 (stat_list)

    block      go to state 176
    stat_list  go to state 3


State 159

   28 statement: if_start ELSE block END .

    $default  reduce using rule 28 (statement)


State 160

   31 else_if: else_if ELSEIF exp . THEN block
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    THEN   shift, and go to state 177
    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101


State 161

   29 statement: if_start else_if ELSE block . END

    END  shift, and go to state 178


State 162

   59 function_call: prefix_exp ':' NAME args .

    $default  reduce using rule 59 (function_call)


State 163

   50 var: prefix_exp '[' exp ']' .

    $default  reduce using rule 50 (var)


State 164

   61 args: '(' exp_list ')' .

    $default  reduce using rule 61 (args)


State 165

   56 function_body: '(' ')' block . END

    END  shift, and go to state 179


State 166

   57 function_body: '(' par_list ')' . block END

    $default  reduce using rule 6 (stat_list)

    block      go to state 180
    stat_list  go to state 3


State 167

   65 par_list: name_list ',' . DOTS
   69 name_list: name_list ',' . NAME

    NAME  shift, and go to state 181
    DOTS  shift, and go to state 182


State 168

   78 field: NAME '=' exp .
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 78 (field)


State 169

   77 field: '[' exp ']' . '=' exp

    '='  shift, and go to state 183


State 170

   75 field_list_part: field_list_part field_sep field .

    $default  reduce using rule 75 (field_list_part)


State 171

   19 while_do: WHILE exp DO block END .

    $default  reduce using rule 19 (while_do)


State 172

   24 for_cycle: FOR NAME '=' exp_list DO . block END

    $default  reduce using rule 6 (stat_list)

    block      go to state 184
    stat_list  go to state 3


State 173

   25 for_cycle: FOR exp_list IN exp_list DO . block END

    $default  reduce using rule 6 (stat_list)

    block      go to state 185
    stat_list  go to state 3


State 174

   35 attr: '<' NAME '>' .

    $default  reduce using rule 35 (attr)


State 175

   33 attr_list: attr_list ',' NAME attr .

    $default  reduce using rule 33 (attr_list)


State 176

   32 else_if: ELSEIF exp THEN block .

    $default  reduce using rule 32 (else_if)


State 177

   31 else_if: else_if ELSEIF exp THEN . block

    $default  reduce using rule 6 (stat_list)

    block      go to state 186
    stat_list  go to state 3


State 178

   29 statement: if_start else_if ELSE block END .

    $default  reduce using rule 29 (statement)


State 179

   56 function_body: '(' ')' block END .

    $default  reduce using rule 56 (function_body)


State 180

   57 function_body: '(' par_list ')' block . END

    END  shift, and go to state 187


State 181

   69 name_list: name_list ',' NAME .

    $default  reduce using rule 69 (name_list)


State 182

   65 par_list: name_list ',' DOTS .

    $default  reduce using rule 65 (par_list)


State 183

   77 field: '[' exp ']' '=' . exp

    INT         shift, and go to state 33
    HEX         shift, and go to state 34
    FLOAT       shift, and go to state 35
    HEX_FLOAT   shift, and go to state 36
    ONEQSTRING  shift, and go to state 37
    TWOQSTRING  shift, and go to state 38
    LONGSTRING  shift, and go to state 39
    NAME        shift, and go to state 5
    DOTS        shift, and go to state 40
    NIL         shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43
    FUNCTION    shift, and go to state 44
    MINUS       shift, and go to state 45
    UNOP        shift, and go to state 46
    '('         shift, and go to state 18
    '{'         shift, and go to state 47

    var            go to state 48
    prefix_exp     go to state 49
    function_def   go to state 50
    function_call  go to state 51
    table_body     go to state 52
    exp            go to state 188
    literalString  go to state 54
    numeral        go to state 55


State 184

   24 for_cycle: FOR NAME '=' exp_list DO block . END

    END  shift, and go to state 189


State 185

   25 for_cycle: FOR exp_list IN exp_list DO block . END

    END  shift, and go to state 190


State 186

   31 else_if: else_if ELSEIF exp THEN block .

    $default  reduce using rule 31 (else_if)


State 187

   57 function_body: '(' par_list ')' block END .

    $default  reduce using rule 57 (function_body)


State 188

   77 field: '[' exp ']' '=' exp .
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    MINUS  shift, and go to state 98
    BINOP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 77 (field)


State 189

   24 for_cycle: FOR NAME '=' exp_list DO block END .

    $default  reduce using rule 24 (for_cycle)


State 190

   25 for_cycle: FOR exp_list IN exp_list DO block END .

    $default  reduce using rule 25 (for_cycle)
