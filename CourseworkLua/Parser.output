Terminals unused in grammar

   TWOQ
   ONEQ
   NESTED_STR


State 0 conflicts: 13 shift/reduce
State 2 conflicts: 13 shift/reduce
State 5 conflicts: 13 shift/reduce
State 16 conflicts: 14 shift/reduce, 5 reduce/reduce
State 27 conflicts: 1 reduce/reduce
State 45 conflicts: 1 reduce/reduce
State 47 conflicts: 1 reduce/reduce
State 80 conflicts: 4 shift/reduce
State 81 conflicts: 4 shift/reduce
State 94 conflicts: 13 shift/reduce
State 101 conflicts: 13 shift/reduce
State 124 conflicts: 13 shift/reduce
State 127 conflicts: 1 reduce/reduce
State 134 conflicts: 4 shift/reduce
State 135 conflicts: 4 shift/reduce
State 137 conflicts: 4 shift/reduce
State 138 conflicts: 4 shift/reduce
State 155 conflicts: 13 shift/reduce
State 161 conflicts: 13 shift/reduce
State 162 conflicts: 13 shift/reduce
State 165 conflicts: 13 shift/reduce
State 180 conflicts: 13 shift/reduce
State 185 conflicts: 13 shift/reduce
State 190 conflicts: 13 shift/reduce


Grammar

    0 $accept: main $end

    1 main: block

    2 block: stat_list
    3      | stat_list ret

    4 stat_list: stat_list opt_stat
    5          | opt_stat

    6 opt_stat: stat
    7         | /* empty */

    8 stat: ';'
    9     | var_list '=' exp_list
   10     | function_call
   11     | label
   12     | BREAK
   13     | GOTO NAME
   14     | while_do
   15     | statement
   16     | for_cycle
   17     | FUNCTION function_name function_body
   18     | locals

   19 while_do: DO block END
   20         | WHILE exp DO block END
   21         | REPEAT block UNTIL exp

   22 locals: LOCAL FUNCTION NAME function_body
   23       | LOCAL attr_list
   24       | LOCAL attr_list '=' exp_list

   25 for_cycle: FOR NAME '=' exp_list DO block END
   26          | FOR exp_list IN exp_list DO block END

   27 statement: IF exp THEN block END
   28          | IF exp THEN block else_if END
   29          | IF exp THEN block ELSE block END
   30          | IF exp THEN block else_if ELSE block END

   31 else_if: else_if ELSEIF exp THEN block
   32        | ELSEIF exp THEN block

   33 attr_list: attr_list ',' NAME attr
   34          | NAME attr

   35 attr: '<' NAME '>'
   36     | /* empty */

   37 ret: RETURN
   38    | RETURN ';'
   39    | RETURN exp_list
   40    | RETURN exp_list ';'

   41 label: LABEL_DEF NAME LABEL_DEF

   42 function_name: function_name_part
   43              | function_name_part ':' NAME

   44 function_name_part: function_name_part '.' NAME
   45                   | NAME

   46 var_list: var_list ',' var
   47         | var

   48 var: NAME
   49    | prefix_exp '[' exp ']'
   50    | prefix_exp '.' NAME

   51 prefix_exp: var
   52           | function_call
   53           | '(' exp ')'

   54 function_def: FUNCTION function_body

   55 function_body: '(' ')' block END
   56              | '(' par_list ')' block END

   57 function_call: prefix_exp args
   58              | prefix_exp ':' NAME args

   59 args: '(' ')'
   60     | '(' exp_list ')'
   61     | table_body
   62     | literalString

   63 par_list: name_list
   64         | name_list ',' DOTS
   65         | DOTS

   66 exp_list: exp_list ',' exp
   67         | exp

   68 name_list: name_list ',' NAME
   69          | NAME

   70 table_body: '{' '}'
   71           | '{' field_list '}'

   72 field_list: field_list_part field_sep
   73           | field_list_part

   74 field_list_part: field_list_part field_sep field
   75                | field

   76 field: '[' exp ']' '=' exp
   77      | NAME '=' exp
   78      | exp

   79 field_sep: ','
   80          | ';'

   81 exp: NIL
   82    | FALSE
   83    | TRUE
   84    | DOTS
   85    | '(' exp ')'
   86    | exp BINOP exp
   87    | exp MINUS exp
   88    | exp '<' exp
   89    | exp '>' exp
   90    | MINUS exp
   91    | UNOP exp
   92    | numeral
   93    | literalString
   94    | table_body
   95    | function_def
   96    | function_call
   97    | var

   98 literalString: ONEQSTRING
   99              | TWOQSTRING
  100              | LONGSTRING

  101 numeral: INT
  102        | HEX
  103        | FLOAT
  104        | HEX_FLOAT


Terminals, with rules where they appear

$end (0) 0
'(' (40) 53 55 56 59 60 85
')' (41) 53 55 56 59 60 85
',' (44) 33 46 64 66 68 79
'.' (46) 44 50
':' (58) 43 58
';' (59) 8 38 40 80
'<' (60) 35 88
'=' (61) 9 24 25 76 77
'>' (62) 35 89
'[' (91) 49 76
']' (93) 49 76
'{' (123) 70 71
'}' (125) 70 71
error (256)
INT (258) 101
HEX (259) 102
FLOAT (260) 103
HEX_FLOAT (261) 104
TWOQ (262)
ONEQ (263)
ONEQSTRING (264) 98
TWOQSTRING (265) 99
LONGSTRING (266) 100
NESTED_STR (267)
NAME (268) 13 22 25 33 34 35 41 43 44 45 48 50 58 68 69 77
DOTS (269) 64 65 84
NIL (270) 81
FALSE (271) 82
TRUE (272) 83
BINOP (273) 86
UNOP (274) 91
MINUS (275) 87 90
DO (276) 19 20 25 26
WHILE (277) 20
FOR (278) 25 26
UNTIL (279) 21
REPEAT (280) 21
END (281) 19 20 25 26 27 28 29 30 55 56
GOTO (282) 13
IN (283) 26
IF (284) 27 28 29 30
THEN (285) 27 28 29 30 31 32
ELSEIF (286) 31 32
ELSE (287) 29 30
LOCAL (288) 22 23 24
FUNCTION (289) 17 22 54
BREAK (290) 12
RETURN (291) 37 38 39 40
LABEL_DEF (292) 41


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
main (52)
    on left: 1, on right: 0
block (53)
    on left: 2 3, on right: 1 19 20 21 25 26 27 28 29 30 31 32 55 56
stat_list (54)
    on left: 4 5, on right: 2 3 4
opt_stat (55)
    on left: 6 7, on right: 4 5
stat (56)
    on left: 8 9 10 11 12 13 14 15 16 17 18, on right: 6
while_do (57)
    on left: 19 20 21, on right: 14
locals (58)
    on left: 22 23 24, on right: 18
for_cycle (59)
    on left: 25 26, on right: 16
statement (60)
    on left: 27 28 29 30, on right: 15
else_if (61)
    on left: 31 32, on right: 28 30 31
attr_list (62)
    on left: 33 34, on right: 23 24 33
attr (63)
    on left: 35 36, on right: 33 34
ret (64)
    on left: 37 38 39 40, on right: 3
label (65)
    on left: 41, on right: 11
function_name (66)
    on left: 42 43, on right: 17
function_name_part (67)
    on left: 44 45, on right: 42 43 44
var_list (68)
    on left: 46 47, on right: 9 46
var (69)
    on left: 48 49 50, on right: 46 47 51 97
prefix_exp (70)
    on left: 51 52 53, on right: 49 50 57 58
function_def (71)
    on left: 54, on right: 95
function_body (72)
    on left: 55 56, on right: 17 22 54
function_call (73)
    on left: 57 58, on right: 10 52 96
args (74)
    on left: 59 60 61 62, on right: 57 58
par_list (75)
    on left: 63 64 65, on right: 56
exp_list (76)
    on left: 66 67, on right: 9 24 25 26 39 40 60 66
name_list (77)
    on left: 68 69, on right: 63 64 68
table_body (78)
    on left: 70 71, on right: 61 94
field_list (79)
    on left: 72 73, on right: 71
field_list_part (80)
    on left: 74 75, on right: 72 73 74
field (81)
    on left: 76 77 78, on right: 74 75
field_sep (82)
    on left: 79 80, on right: 72 74
exp (83)
    on left: 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97, on right:
    20 21 27 28 29 30 31 32 49 53 66 67 76 77 78 85 86 87 88 89 90
    91
literalString (84)
    on left: 98 99 100, on right: 62 93
numeral (85)
    on left: 101 102 103 104, on right: 92


State 0

    0 $accept: . main $end

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    main           go to state 14
    block          go to state 15
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 1

   48 var: NAME .

    $default  reduce using rule 48 (var)


State 2

   19 while_do: DO . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 28
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 3

   20 while_do: WHILE . exp DO block END

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 49
    literalString  go to state 50
    numeral        go to state 51


State 4

   25 for_cycle: FOR . NAME '=' exp_list DO block END
   26          | FOR . exp_list IN exp_list DO block END

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 52
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    exp_list       go to state 53
    table_body     go to state 48
    exp            go to state 54
    literalString  go to state 50
    numeral        go to state 51


State 5

   21 while_do: REPEAT . block UNTIL exp

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 55
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 6

   13 stat: GOTO . NAME

    NAME  shift, and go to state 56


State 7

   27 statement: IF . exp THEN block END
   28          | IF . exp THEN block else_if END
   29          | IF . exp THEN block ELSE block END
   30          | IF . exp THEN block else_if ELSE block END

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 57
    literalString  go to state 50
    numeral        go to state 51


State 8

   22 locals: LOCAL . FUNCTION NAME function_body
   23       | LOCAL . attr_list
   24       | LOCAL . attr_list '=' exp_list

    NAME      shift, and go to state 58
    FUNCTION  shift, and go to state 59

    attr_list  go to state 60


State 9

   17 stat: FUNCTION . function_name function_body

    NAME  shift, and go to state 61

    function_name       go to state 62
    function_name_part  go to state 63


State 10

   12 stat: BREAK .

    $default  reduce using rule 12 (stat)


State 11

   41 label: LABEL_DEF . NAME LABEL_DEF

    NAME  shift, and go to state 64


State 12

    8 stat: ';' .

    $default  reduce using rule 8 (stat)


State 13

   53 prefix_exp: '(' . exp ')'

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 65
    literalString  go to state 50
    numeral        go to state 51


State 14

    0 $accept: main . $end

    $end  shift, and go to state 66


State 15

    1 main: block .

    $default  reduce using rule 1 (main)


State 16

    2 block: stat_list .
    3      | stat_list . ret
    4 stat_list: stat_list . opt_stat

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    RETURN     shift, and go to state 67
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    $end       reduce using rule 2 (block)
    $end       [reduce using rule 7 (opt_stat)]
    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    UNTIL      reduce using rule 2 (block)
    UNTIL      [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    END        reduce using rule 2 (block)
    END        [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    ELSEIF     reduce using rule 2 (block)
    ELSEIF     [reduce using rule 7 (opt_stat)]
    ELSE       reduce using rule 2 (block)
    ELSE       [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    RETURN     [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 2 (block)

    opt_stat       go to state 68
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    ret            go to state 69
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 17

    5 stat_list: opt_stat .

    $default  reduce using rule 5 (stat_list)


State 18

    6 opt_stat: stat .

    $default  reduce using rule 6 (opt_stat)


State 19

   14 stat: while_do .

    $default  reduce using rule 14 (stat)


State 20

   18 stat: locals .

    $default  reduce using rule 18 (stat)


State 21

   16 stat: for_cycle .

    $default  reduce using rule 16 (stat)


State 22

   15 stat: statement .

    $default  reduce using rule 15 (stat)


State 23

   11 stat: label .

    $default  reduce using rule 11 (stat)


State 24

    9 stat: var_list . '=' exp_list
   46 var_list: var_list . ',' var

    '='  shift, and go to state 70
    ','  shift, and go to state 71


State 25

   47 var_list: var .
   51 prefix_exp: var .

    '='       reduce using rule 47 (var_list)
    ','       reduce using rule 47 (var_list)
    $default  reduce using rule 51 (prefix_exp)


State 26

   49 var: prefix_exp . '[' exp ']'
   50    | prefix_exp . '.' NAME
   57 function_call: prefix_exp . args
   58              | prefix_exp . ':' NAME args

    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    ':'         shift, and go to state 72
    '.'         shift, and go to state 73
    '['         shift, and go to state 74
    '('         shift, and go to state 75
    '{'         shift, and go to state 44

    args           go to state 76
    table_body     go to state 77
    literalString  go to state 78


State 27

   10 stat: function_call .
   52 prefix_exp: function_call .

    ONEQSTRING  reduce using rule 52 (prefix_exp)
    TWOQSTRING  reduce using rule 52 (prefix_exp)
    LONGSTRING  reduce using rule 52 (prefix_exp)
    ':'         reduce using rule 52 (prefix_exp)
    '.'         reduce using rule 52 (prefix_exp)
    '['         reduce using rule 52 (prefix_exp)
    '('         reduce using rule 10 (stat)
    '('         [reduce using rule 52 (prefix_exp)]
    '{'         reduce using rule 52 (prefix_exp)
    $default    reduce using rule 10 (stat)


State 28

   19 while_do: DO block . END

    END  shift, and go to state 79


State 29

  101 numeral: INT .

    $default  reduce using rule 101 (numeral)


State 30

  102 numeral: HEX .

    $default  reduce using rule 102 (numeral)


State 31

  103 numeral: FLOAT .

    $default  reduce using rule 103 (numeral)


State 32

  104 numeral: HEX_FLOAT .

    $default  reduce using rule 104 (numeral)


State 33

   98 literalString: ONEQSTRING .

    $default  reduce using rule 98 (literalString)


State 34

   99 literalString: TWOQSTRING .

    $default  reduce using rule 99 (literalString)


State 35

  100 literalString: LONGSTRING .

    $default  reduce using rule 100 (literalString)


State 36

   84 exp: DOTS .

    $default  reduce using rule 84 (exp)


State 37

   81 exp: NIL .

    $default  reduce using rule 81 (exp)


State 38

   82 exp: FALSE .

    $default  reduce using rule 82 (exp)


State 39

   83 exp: TRUE .

    $default  reduce using rule 83 (exp)


State 40

   91 exp: UNOP . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 80
    literalString  go to state 50
    numeral        go to state 51


State 41

   90 exp: MINUS . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 81
    literalString  go to state 50
    numeral        go to state 51


State 42

   54 function_def: FUNCTION . function_body

    '('  shift, and go to state 82

    function_body  go to state 83


State 43

   53 prefix_exp: '(' . exp ')'
   85 exp: '(' . exp ')'

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 84
    literalString  go to state 50
    numeral        go to state 51


State 44

   70 table_body: '{' . '}'
   71           | '{' . field_list '}'

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 85
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '['         shift, and go to state 86
    '('         shift, and go to state 43
    '{'         shift, and go to state 44
    '}'         shift, and go to state 87

    var              go to state 45
    prefix_exp       go to state 26
    function_def     go to state 46
    function_call    go to state 47
    table_body       go to state 48
    field_list       go to state 88
    field_list_part  go to state 89
    field            go to state 90
    exp              go to state 91
    literalString    go to state 50
    numeral          go to state 51


State 45

   51 prefix_exp: var .
   97 exp: var .

    ONEQSTRING  reduce using rule 51 (prefix_exp)
    TWOQSTRING  reduce using rule 51 (prefix_exp)
    LONGSTRING  reduce using rule 51 (prefix_exp)
    ':'         reduce using rule 51 (prefix_exp)
    '.'         reduce using rule 51 (prefix_exp)
    '['         reduce using rule 51 (prefix_exp)
    '('         reduce using rule 51 (prefix_exp)
    '('         [reduce using rule 97 (exp)]
    '{'         reduce using rule 51 (prefix_exp)
    $default    reduce using rule 97 (exp)


State 46

   95 exp: function_def .

    $default  reduce using rule 95 (exp)


State 47

   52 prefix_exp: function_call .
   96 exp: function_call .

    ONEQSTRING  reduce using rule 52 (prefix_exp)
    TWOQSTRING  reduce using rule 52 (prefix_exp)
    LONGSTRING  reduce using rule 52 (prefix_exp)
    ':'         reduce using rule 52 (prefix_exp)
    '.'         reduce using rule 52 (prefix_exp)
    '['         reduce using rule 52 (prefix_exp)
    '('         reduce using rule 52 (prefix_exp)
    '('         [reduce using rule 96 (exp)]
    '{'         reduce using rule 52 (prefix_exp)
    $default    reduce using rule 96 (exp)


State 48

   94 exp: table_body .

    $default  reduce using rule 94 (exp)


State 49

   20 while_do: WHILE exp . DO block END
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    DO     shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96


State 50

   93 exp: literalString .

    $default  reduce using rule 93 (exp)


State 51

   92 exp: numeral .

    $default  reduce using rule 92 (exp)


State 52

   25 for_cycle: FOR NAME . '=' exp_list DO block END
   48 var: NAME .

    '='  shift, and go to state 97

    $default  reduce using rule 48 (var)


State 53

   26 for_cycle: FOR exp_list . IN exp_list DO block END
   66 exp_list: exp_list . ',' exp

    IN   shift, and go to state 98
    ','  shift, and go to state 99


State 54

   67 exp_list: exp .
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96

    $default  reduce using rule 67 (exp_list)


State 55

   21 while_do: REPEAT block . UNTIL exp

    UNTIL  shift, and go to state 100


State 56

   13 stat: GOTO NAME .

    $default  reduce using rule 13 (stat)


State 57

   27 statement: IF exp . THEN block END
   28          | IF exp . THEN block else_if END
   29          | IF exp . THEN block ELSE block END
   30          | IF exp . THEN block else_if ELSE block END
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    THEN   shift, and go to state 101
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96


State 58

   34 attr_list: NAME . attr

    '<'  shift, and go to state 102

    $default  reduce using rule 36 (attr)

    attr  go to state 103


State 59

   22 locals: LOCAL FUNCTION . NAME function_body

    NAME  shift, and go to state 104


State 60

   23 locals: LOCAL attr_list .
   24       | LOCAL attr_list . '=' exp_list
   33 attr_list: attr_list . ',' NAME attr

    '='  shift, and go to state 105
    ','  shift, and go to state 106

    $default  reduce using rule 23 (locals)


State 61

   45 function_name_part: NAME .

    $default  reduce using rule 45 (function_name_part)


State 62

   17 stat: FUNCTION function_name . function_body

    '('  shift, and go to state 82

    function_body  go to state 107


State 63

   42 function_name: function_name_part .
   43              | function_name_part . ':' NAME
   44 function_name_part: function_name_part . '.' NAME

    ':'  shift, and go to state 108
    '.'  shift, and go to state 109

    $default  reduce using rule 42 (function_name)


State 64

   41 label: LABEL_DEF NAME . LABEL_DEF

    LABEL_DEF  shift, and go to state 110


State 65

   53 prefix_exp: '(' exp . ')'
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    ')'    shift, and go to state 111


State 66

    0 $accept: main $end .

    $default  accept


State 67

   37 ret: RETURN .
   38    | RETURN . ';'
   39    | RETURN . exp_list
   40    | RETURN . exp_list ';'

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    ';'         shift, and go to state 112
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    $default  reduce using rule 37 (ret)

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    exp_list       go to state 113
    table_body     go to state 48
    exp            go to state 54
    literalString  go to state 50
    numeral        go to state 51


State 68

    4 stat_list: stat_list opt_stat .

    $default  reduce using rule 4 (stat_list)


State 69

    3 block: stat_list ret .

    $default  reduce using rule 3 (block)


State 70

    9 stat: var_list '=' . exp_list

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    exp_list       go to state 114
    table_body     go to state 48
    exp            go to state 54
    literalString  go to state 50
    numeral        go to state 51


State 71

   46 var_list: var_list ',' . var

    NAME  shift, and go to state 1
    '('   shift, and go to state 13

    var            go to state 115
    prefix_exp     go to state 26
    function_call  go to state 116


State 72

   58 function_call: prefix_exp ':' . NAME args

    NAME  shift, and go to state 117


State 73

   50 var: prefix_exp '.' . NAME

    NAME  shift, and go to state 118


State 74

   49 var: prefix_exp '[' . exp ']'

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 119
    literalString  go to state 50
    numeral        go to state 51


State 75

   59 args: '(' . ')'
   60     | '(' . exp_list ')'

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    ')'         shift, and go to state 120
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    exp_list       go to state 121
    table_body     go to state 48
    exp            go to state 54
    literalString  go to state 50
    numeral        go to state 51


State 76

   57 function_call: prefix_exp args .

    $default  reduce using rule 57 (function_call)


State 77

   61 args: table_body .

    $default  reduce using rule 61 (args)


State 78

   62 args: literalString .

    $default  reduce using rule 62 (args)


State 79

   19 while_do: DO block END .

    $default  reduce using rule 19 (while_do)


State 80

   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp
   91    | UNOP exp .

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96

    BINOP     [reduce using rule 91 (exp)]
    MINUS     [reduce using rule 91 (exp)]
    '<'       [reduce using rule 91 (exp)]
    '>'       [reduce using rule 91 (exp)]
    $default  reduce using rule 91 (exp)


State 81

   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp
   90    | MINUS exp .

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96

    BINOP     [reduce using rule 90 (exp)]
    MINUS     [reduce using rule 90 (exp)]
    '<'       [reduce using rule 90 (exp)]
    '>'       [reduce using rule 90 (exp)]
    $default  reduce using rule 90 (exp)


State 82

   55 function_body: '(' . ')' block END
   56              | '(' . par_list ')' block END

    NAME  shift, and go to state 122
    DOTS  shift, and go to state 123
    ')'   shift, and go to state 124

    par_list   go to state 125
    name_list  go to state 126


State 83

   54 function_def: FUNCTION function_body .

    $default  reduce using rule 54 (function_def)


State 84

   53 prefix_exp: '(' exp . ')'
   85 exp: '(' exp . ')'
   86    | exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    ')'    shift, and go to state 127


State 85

   48 var: NAME .
   77 field: NAME . '=' exp

    '='  shift, and go to state 128

    $default  reduce using rule 48 (var)


State 86

   76 field: '[' . exp ']' '=' exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 129
    literalString  go to state 50
    numeral        go to state 51


State 87

   70 table_body: '{' '}' .

    $default  reduce using rule 70 (table_body)


State 88

   71 table_body: '{' field_list . '}'

    '}'  shift, and go to state 130


State 89

   72 field_list: field_list_part . field_sep
   73           | field_list_part .
   74 field_list_part: field_list_part . field_sep field

    ';'  shift, and go to state 131
    ','  shift, and go to state 132

    $default  reduce using rule 73 (field_list)

    field_sep  go to state 133


State 90

   75 field_list_part: field .

    $default  reduce using rule 75 (field_list_part)


State 91

   78 field: exp .
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96

    $default  reduce using rule 78 (field)


State 92

   86 exp: exp BINOP . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 134
    literalString  go to state 50
    numeral        go to state 51


State 93

   87 exp: exp MINUS . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 135
    literalString  go to state 50
    numeral        go to state 51


State 94

   20 while_do: WHILE exp DO . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 136
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 95

   88 exp: exp '<' . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 137
    literalString  go to state 50
    numeral        go to state 51


State 96

   89 exp: exp '>' . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 138
    literalString  go to state 50
    numeral        go to state 51


State 97

   25 for_cycle: FOR NAME '=' . exp_list DO block END

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    exp_list       go to state 139
    table_body     go to state 48
    exp            go to state 54
    literalString  go to state 50
    numeral        go to state 51


State 98

   26 for_cycle: FOR exp_list IN . exp_list DO block END

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    exp_list       go to state 140
    table_body     go to state 48
    exp            go to state 54
    literalString  go to state 50
    numeral        go to state 51


State 99

   66 exp_list: exp_list ',' . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 141
    literalString  go to state 50
    numeral        go to state 51


State 100

   21 while_do: REPEAT block UNTIL . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 142
    literalString  go to state 50
    numeral        go to state 51


State 101

   27 statement: IF exp THEN . block END
   28          | IF exp THEN . block else_if END
   29          | IF exp THEN . block ELSE block END
   30          | IF exp THEN . block else_if ELSE block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 143
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 102

   35 attr: '<' . NAME '>'

    NAME  shift, and go to state 144


State 103

   34 attr_list: NAME attr .

    $default  reduce using rule 34 (attr_list)


State 104

   22 locals: LOCAL FUNCTION NAME . function_body

    '('  shift, and go to state 82

    function_body  go to state 145


State 105

   24 locals: LOCAL attr_list '=' . exp_list

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    exp_list       go to state 146
    table_body     go to state 48
    exp            go to state 54
    literalString  go to state 50
    numeral        go to state 51


State 106

   33 attr_list: attr_list ',' . NAME attr

    NAME  shift, and go to state 147


State 107

   17 stat: FUNCTION function_name function_body .

    $default  reduce using rule 17 (stat)


State 108

   43 function_name: function_name_part ':' . NAME

    NAME  shift, and go to state 148


State 109

   44 function_name_part: function_name_part '.' . NAME

    NAME  shift, and go to state 149


State 110

   41 label: LABEL_DEF NAME LABEL_DEF .

    $default  reduce using rule 41 (label)


State 111

   53 prefix_exp: '(' exp ')' .

    $default  reduce using rule 53 (prefix_exp)


State 112

   38 ret: RETURN ';' .

    $default  reduce using rule 38 (ret)


State 113

   39 ret: RETURN exp_list .
   40    | RETURN exp_list . ';'
   66 exp_list: exp_list . ',' exp

    ';'  shift, and go to state 150
    ','  shift, and go to state 99

    $default  reduce using rule 39 (ret)


State 114

    9 stat: var_list '=' exp_list .
   66 exp_list: exp_list . ',' exp

    ','  shift, and go to state 99

    $default  reduce using rule 9 (stat)


State 115

   46 var_list: var_list ',' var .
   51 prefix_exp: var .

    '='       reduce using rule 46 (var_list)
    ','       reduce using rule 46 (var_list)
    $default  reduce using rule 51 (prefix_exp)


State 116

   52 prefix_exp: function_call .

    $default  reduce using rule 52 (prefix_exp)


State 117

   58 function_call: prefix_exp ':' NAME . args

    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    '('         shift, and go to state 75
    '{'         shift, and go to state 44

    args           go to state 151
    table_body     go to state 77
    literalString  go to state 78


State 118

   50 var: prefix_exp '.' NAME .

    $default  reduce using rule 50 (var)


State 119

   49 var: prefix_exp '[' exp . ']'
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    ']'    shift, and go to state 152


State 120

   59 args: '(' ')' .

    $default  reduce using rule 59 (args)


State 121

   60 args: '(' exp_list . ')'
   66 exp_list: exp_list . ',' exp

    ','  shift, and go to state 99
    ')'  shift, and go to state 153


State 122

   69 name_list: NAME .

    $default  reduce using rule 69 (name_list)


State 123

   65 par_list: DOTS .

    $default  reduce using rule 65 (par_list)


State 124

   55 function_body: '(' ')' . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 154
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 125

   56 function_body: '(' par_list . ')' block END

    ')'  shift, and go to state 155


State 126

   63 par_list: name_list .
   64         | name_list . ',' DOTS
   68 name_list: name_list . ',' NAME

    ','  shift, and go to state 156

    $default  reduce using rule 63 (par_list)


State 127

   53 prefix_exp: '(' exp ')' .
   85 exp: '(' exp ')' .

    ONEQSTRING  reduce using rule 53 (prefix_exp)
    TWOQSTRING  reduce using rule 53 (prefix_exp)
    LONGSTRING  reduce using rule 53 (prefix_exp)
    ':'         reduce using rule 53 (prefix_exp)
    '.'         reduce using rule 53 (prefix_exp)
    '['         reduce using rule 53 (prefix_exp)
    '('         reduce using rule 53 (prefix_exp)
    '('         [reduce using rule 85 (exp)]
    '{'         reduce using rule 53 (prefix_exp)
    $default    reduce using rule 85 (exp)


State 128

   77 field: NAME '=' . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 157
    literalString  go to state 50
    numeral        go to state 51


State 129

   76 field: '[' exp . ']' '=' exp
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    ']'    shift, and go to state 158


State 130

   71 table_body: '{' field_list '}' .

    $default  reduce using rule 71 (table_body)


State 131

   80 field_sep: ';' .

    $default  reduce using rule 80 (field_sep)


State 132

   79 field_sep: ',' .

    $default  reduce using rule 79 (field_sep)


State 133

   72 field_list: field_list_part field_sep .
   74 field_list_part: field_list_part field_sep . field

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 85
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '['         shift, and go to state 86
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    $default  reduce using rule 72 (field_list)

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    field          go to state 159
    exp            go to state 91
    literalString  go to state 50
    numeral        go to state 51


State 134

   86 exp: exp . BINOP exp
   86    | exp BINOP exp .
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96

    BINOP     [reduce using rule 86 (exp)]
    MINUS     [reduce using rule 86 (exp)]
    '<'       [reduce using rule 86 (exp)]
    '>'       [reduce using rule 86 (exp)]
    $default  reduce using rule 86 (exp)


State 135

   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   87    | exp MINUS exp .
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96

    BINOP     [reduce using rule 87 (exp)]
    MINUS     [reduce using rule 87 (exp)]
    '<'       [reduce using rule 87 (exp)]
    '>'       [reduce using rule 87 (exp)]
    $default  reduce using rule 87 (exp)


State 136

   20 while_do: WHILE exp DO block . END

    END  shift, and go to state 160


State 137

   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   88    | exp '<' exp .
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96

    BINOP     [reduce using rule 88 (exp)]
    MINUS     [reduce using rule 88 (exp)]
    '<'       [reduce using rule 88 (exp)]
    '>'       [reduce using rule 88 (exp)]
    $default  reduce using rule 88 (exp)


State 138

   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp
   89    | exp '>' exp .

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96

    BINOP     [reduce using rule 89 (exp)]
    MINUS     [reduce using rule 89 (exp)]
    '<'       [reduce using rule 89 (exp)]
    '>'       [reduce using rule 89 (exp)]
    $default  reduce using rule 89 (exp)


State 139

   25 for_cycle: FOR NAME '=' exp_list . DO block END
   66 exp_list: exp_list . ',' exp

    DO   shift, and go to state 161
    ','  shift, and go to state 99


State 140

   26 for_cycle: FOR exp_list IN exp_list . DO block END
   66 exp_list: exp_list . ',' exp

    DO   shift, and go to state 162
    ','  shift, and go to state 99


State 141

   66 exp_list: exp_list ',' exp .
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96

    $default  reduce using rule 66 (exp_list)


State 142

   21 while_do: REPEAT block UNTIL exp .
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96

    $default  reduce using rule 21 (while_do)


State 143

   27 statement: IF exp THEN block . END
   28          | IF exp THEN block . else_if END
   29          | IF exp THEN block . ELSE block END
   30          | IF exp THEN block . else_if ELSE block END

    END     shift, and go to state 163
    ELSEIF  shift, and go to state 164
    ELSE    shift, and go to state 165

    else_if  go to state 166


State 144

   35 attr: '<' NAME . '>'

    '>'  shift, and go to state 167


State 145

   22 locals: LOCAL FUNCTION NAME function_body .

    $default  reduce using rule 22 (locals)


State 146

   24 locals: LOCAL attr_list '=' exp_list .
   66 exp_list: exp_list . ',' exp

    ','  shift, and go to state 99

    $default  reduce using rule 24 (locals)


State 147

   33 attr_list: attr_list ',' NAME . attr

    '<'  shift, and go to state 102

    $default  reduce using rule 36 (attr)

    attr  go to state 168


State 148

   43 function_name: function_name_part ':' NAME .

    $default  reduce using rule 43 (function_name)


State 149

   44 function_name_part: function_name_part '.' NAME .

    $default  reduce using rule 44 (function_name_part)


State 150

   40 ret: RETURN exp_list ';' .

    $default  reduce using rule 40 (ret)


State 151

   58 function_call: prefix_exp ':' NAME args .

    $default  reduce using rule 58 (function_call)


State 152

   49 var: prefix_exp '[' exp ']' .

    $default  reduce using rule 49 (var)


State 153

   60 args: '(' exp_list ')' .

    $default  reduce using rule 60 (args)


State 154

   55 function_body: '(' ')' block . END

    END  shift, and go to state 169


State 155

   56 function_body: '(' par_list ')' . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 170
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 156

   64 par_list: name_list ',' . DOTS
   68 name_list: name_list ',' . NAME

    NAME  shift, and go to state 171
    DOTS  shift, and go to state 172


State 157

   77 field: NAME '=' exp .
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96

    $default  reduce using rule 77 (field)


State 158

   76 field: '[' exp ']' . '=' exp

    '='  shift, and go to state 173


State 159

   74 field_list_part: field_list_part field_sep field .

    $default  reduce using rule 74 (field_list_part)


State 160

   20 while_do: WHILE exp DO block END .

    $default  reduce using rule 20 (while_do)


State 161

   25 for_cycle: FOR NAME '=' exp_list DO . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 174
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 162

   26 for_cycle: FOR exp_list IN exp_list DO . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 175
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 163

   27 statement: IF exp THEN block END .

    $default  reduce using rule 27 (statement)


State 164

   32 else_if: ELSEIF . exp THEN block

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 176
    literalString  go to state 50
    numeral        go to state 51


State 165

   29 statement: IF exp THEN block ELSE . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 177
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 166

   28 statement: IF exp THEN block else_if . END
   30          | IF exp THEN block else_if . ELSE block END
   31 else_if: else_if . ELSEIF exp THEN block

    END     shift, and go to state 178
    ELSEIF  shift, and go to state 179
    ELSE    shift, and go to state 180


State 167

   35 attr: '<' NAME '>' .

    $default  reduce using rule 35 (attr)


State 168

   33 attr_list: attr_list ',' NAME attr .

    $default  reduce using rule 33 (attr_list)


State 169

   55 function_body: '(' ')' block END .

    $default  reduce using rule 55 (function_body)


State 170

   56 function_body: '(' par_list ')' block . END

    END  shift, and go to state 181


State 171

   68 name_list: name_list ',' NAME .

    $default  reduce using rule 68 (name_list)


State 172

   64 par_list: name_list ',' DOTS .

    $default  reduce using rule 64 (par_list)


State 173

   76 field: '[' exp ']' '=' . exp

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 182
    literalString  go to state 50
    numeral        go to state 51


State 174

   25 for_cycle: FOR NAME '=' exp_list DO block . END

    END  shift, and go to state 183


State 175

   26 for_cycle: FOR exp_list IN exp_list DO block . END

    END  shift, and go to state 184


State 176

   32 else_if: ELSEIF exp . THEN block
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    THEN   shift, and go to state 185
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96


State 177

   29 statement: IF exp THEN block ELSE block . END

    END  shift, and go to state 186


State 178

   28 statement: IF exp THEN block else_if END .

    $default  reduce using rule 28 (statement)


State 179

   31 else_if: else_if ELSEIF . exp THEN block

    INT         shift, and go to state 29
    HEX         shift, and go to state 30
    FLOAT       shift, and go to state 31
    HEX_FLOAT   shift, and go to state 32
    ONEQSTRING  shift, and go to state 33
    TWOQSTRING  shift, and go to state 34
    LONGSTRING  shift, and go to state 35
    NAME        shift, and go to state 1
    DOTS        shift, and go to state 36
    NIL         shift, and go to state 37
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39
    UNOP        shift, and go to state 40
    MINUS       shift, and go to state 41
    FUNCTION    shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 44

    var            go to state 45
    prefix_exp     go to state 26
    function_def   go to state 46
    function_call  go to state 47
    table_body     go to state 48
    exp            go to state 187
    literalString  go to state 50
    numeral        go to state 51


State 180

   30 statement: IF exp THEN block else_if ELSE . block END

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 188
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 181

   56 function_body: '(' par_list ')' block END .

    $default  reduce using rule 56 (function_body)


State 182

   76 field: '[' exp ']' '=' exp .
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96

    $default  reduce using rule 76 (field)


State 183

   25 for_cycle: FOR NAME '=' exp_list DO block END .

    $default  reduce using rule 25 (for_cycle)


State 184

   26 for_cycle: FOR exp_list IN exp_list DO block END .

    $default  reduce using rule 26 (for_cycle)


State 185

   32 else_if: ELSEIF exp THEN . block

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 189
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 186

   29 statement: IF exp THEN block ELSE block END .

    $default  reduce using rule 29 (statement)


State 187

   31 else_if: else_if ELSEIF exp . THEN block
   86 exp: exp . BINOP exp
   87    | exp . MINUS exp
   88    | exp . '<' exp
   89    | exp . '>' exp

    BINOP  shift, and go to state 92
    MINUS  shift, and go to state 93
    THEN   shift, and go to state 190
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96


State 188

   30 statement: IF exp THEN block else_if ELSE block . END

    END  shift, and go to state 191


State 189

   32 else_if: ELSEIF exp THEN block .

    $default  reduce using rule 32 (else_if)


State 190

   31 else_if: else_if ELSEIF exp THEN . block

    NAME       shift, and go to state 1
    DO         shift, and go to state 2
    WHILE      shift, and go to state 3
    FOR        shift, and go to state 4
    REPEAT     shift, and go to state 5
    GOTO       shift, and go to state 6
    IF         shift, and go to state 7
    LOCAL      shift, and go to state 8
    FUNCTION   shift, and go to state 9
    BREAK      shift, and go to state 10
    LABEL_DEF  shift, and go to state 11
    ';'        shift, and go to state 12
    '('        shift, and go to state 13

    NAME       [reduce using rule 7 (opt_stat)]
    DO         [reduce using rule 7 (opt_stat)]
    WHILE      [reduce using rule 7 (opt_stat)]
    FOR        [reduce using rule 7 (opt_stat)]
    REPEAT     [reduce using rule 7 (opt_stat)]
    GOTO       [reduce using rule 7 (opt_stat)]
    IF         [reduce using rule 7 (opt_stat)]
    LOCAL      [reduce using rule 7 (opt_stat)]
    FUNCTION   [reduce using rule 7 (opt_stat)]
    BREAK      [reduce using rule 7 (opt_stat)]
    LABEL_DEF  [reduce using rule 7 (opt_stat)]
    ';'        [reduce using rule 7 (opt_stat)]
    '('        [reduce using rule 7 (opt_stat)]
    $default   reduce using rule 7 (opt_stat)

    block          go to state 192
    stat_list      go to state 16
    opt_stat       go to state 17
    stat           go to state 18
    while_do       go to state 19
    locals         go to state 20
    for_cycle      go to state 21
    statement      go to state 22
    label          go to state 23
    var_list       go to state 24
    var            go to state 25
    prefix_exp     go to state 26
    function_call  go to state 27


State 191

   30 statement: IF exp THEN block else_if ELSE block END .

    $default  reduce using rule 30 (statement)


State 192

   31 else_if: else_if ELSEIF exp THEN block .

    $default  reduce using rule 31 (else_if)
